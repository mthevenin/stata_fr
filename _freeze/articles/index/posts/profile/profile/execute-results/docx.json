{
  "hash": "73e168d70bf43497cf09fd754efa3e46",
  "result": {
    "markdown": "---\ntitle: \"**Configurer les sessions avec un profile.do**\"\n\ntitle-block-banner: false\n\nauthor: \n  - name: \"Marc Thévenin\"\n    affiliations:\n      - name: \"Ined\"\n\ndate: 09/26/2022\n\ncategories:\n  - profile\n\nformat: \n  html: default\n  docx:\n    toc: true\n    number-sections: true\n\nfilters:\n   - lightbox\nlightbox: auto\n\nabstract: | \n  Un fichier **profile.do** est un programme qui s'éxécute à l'ouverture d'une session Stata. Ce programme comporte uniquement des éléments de configuration des sessions.\n \n---\n\n\n\n\n\n\n<br>\n\n\nExemples de configurations qui peuvent être ajoutées :  \n\n  * Création d'un log de session automatique [**surement caduc avec le système de backup (4 secondes) des programmes avec la version 18**).\n  * Affectation d'un répertoire temporaire autre que celui par défaut.\n  * Modification de la localisation du répertoire *ado plus* (il est conseillé mettre sur le lecteur D à l'Ined ou tout autre lecteur que le C:).\n  * Toutes les commandes de paramétrisation préfixées par **`set`**: contrôle du défilement de l'output, affichage du nombre de décimales dans les tableaux de régression etc...\n  * Paramètres des graphiques: thèmes, police d'affichage... Je conseille d'utiliser à minima `grstyle` de Ben Jann.\n* Toutes les commandes sont donc insérées dans un seule programme, il est possible de les activer, de les désactiver ou de les modifier très facilement selon l'usage du moment.\n\n\n# Création et modification d'un fichier profile.do \n\n\nLe fichier `profile.do` doit être impérativement enregistré dans le répertoire **user**: \n\n> * Windows: `\"C:/Users/nom_user/\"`\n> * Linux (serveur Margaux): `\"home/Users/nom_user/\"`\n\nUne fois le programme enregistré, son effet n'est pris en compte que pour les sessions  ouvertes ultérieurement et non sur celles en cours. Le programme est chargé uniquement à l'ouverture d'une session, un message apparait dans l'output: \n\n![](g1.PNG){width=70%}\n\nPour faciliter l'ouverture et l'enregistrement du fichier sous windows sans avoir à se promener dans l'explorateur de fichiers, on peut enregistrer la localisation du répertoire user avec une macro de type `global`, ici appelée *user*, et l'ouvrir rapidement avec l'invite de commande windows sous Stata (`!` ou `shell`).\n\nAffectation du répertoire user dans une macro:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nglobal user \"C:/Users/nom_user/\"\n```\n:::\n\n\n\nOuverture du fichier profile.do avec l'invite de commande: \n\n\n::: {.cell}\n\n```{.stata .cell-code}\n! $user/profile.do\n```\n:::\n\n\n\n\n# Exemples\n\nLes quelques exemples de configurations qui suivent sont forcément orientés vers mon propre usage.  \n\n::: panel-tabset\n\n## **adoplus**\n\nChangement de la localisation du répertoire où sont enregistrées les commandes externes. Il est préférable de les localiser dans un lecteur autre que le lecteur C:\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nsysdir set PLUS \"D:/D/ado/plus\"\nsysdir set PERSONAL \"D:/D/ado/personal\"\n```\n:::\n\n\n\n\n## **Répertoire temporaire** \n\nOn peut créer un répertoire qui fera office de répertoire d'enregistrement par défaut des fichiers, et affecter les opérations d'ouvertures et de sauvegardes dans ce répertoire.\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Après création du répertoire stata_temp\ncd \"D:\\D\\stata_temp\\\"\n```\n:::\n\n\n\nC'est très optionnel: on peut demander à Stata d'afficher à l'ouverture le contenu de ce répertoire\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nnoisily display as txt    \"------------------------------------\"\nnoisily display as result \"  Contenu du repertoire stata_temp  \"\nnoisily display as txt    \"------------------------------------\"\nnoisily dir \"D:/D/stata_temp/\"\n```\n:::\n\n\n\n::: {layout-ncol=\"2\"}\n![](g2.PNG)\n\n![](g2b.PNG)\n:::\n\n\n\nSi on change dans un programme le répertoire d'affectation par défaut avec `cd`, ce répertoire  *stata_temp* ne sera plus reconnu comme répertoire par défaut.   \nPour palier ce problème on peut affecter une macro à la localisation de ce répertoire.\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nglobal tmp \"D:/D/stata_temp/\"\n```\n:::\n\n::: {.cell}\n\n```{.stata .cell-code}\ncd \"path/mon_projet\"  \n\nuse base, clear\nkeep if x==1\nsave $tmp/base_x1, replace\n```\n:::\n\n\n\nCette solution comporte néanmoins des limites lorsque le programme est utilisé par plusieurs personnes.\n\n\n## **Log automatique**\n\nLa plus utile de toutes les configurations décrites ici.  \nAu préalable, je conseille de créer un répertoire d'enregistrement pour ces fichiers logs. Je les enregistre dans un sous répertoire de *stat_temp* appelé tout simplement **log**.   \n\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\ncapture log close statalog\nlocal cdt = \"`c(current_date)'\"\nlocal cdt: subinstr local cdt \" \" \"-\", all\nlocal cti = \"`c(current_time)'\"\nlocal cti: subinstr local cti \":\" \".\", all\nlocal statalogname \"statalog_`cdt'_`cti'.log\"\n\nlog using \"$user/stata_temp/log/`statalogname'\" , text name(statalog)\n```\n:::\n\n\n\nPour le chemin d'accès, j'utilise le répertoire *user* enregistré sous forme d'une macro (voir plus haut).\n\nDans ce répertoire sont enregistrés tous les log de session depuis le 1er février 2022.  \n\n![](g3.PNG){width=70%}\n\n\n## **Commandes de type set**\n\n\n> * Il n'est pas nécessaire d'ajouter l'option `permanently` comme le fichier profile est chargé à chaque ouverture de session. \n> * Ensemble des commandes préfixées par `set`: **`help set`**\n\n**Exemple 1**: \nnombre de décimales reportées dans l'output d'une régression avec **`set cformats`** (coef, se et bornes ci), **`set sformats`** (statistique du test) et **`set pformats`** (p-value).    \n\nSi on souhaite fixer le nombre de décimale pour l'ensemble des statistiques à 2\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nset cformats %9.2f   // max longueur =9\nset sformats %9.2f   // max longueur =8\nset pformats %9.2f   // max longueur =5\n```\n:::\n\n\n\n**Exemple 2**: déblocage du défilement de l'output\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nset more off\n```\n:::\n\n\n\n\n\n## **Graphiques**\n\nDe nouveau avec une commande de type `set` on peut dans son fichier *profile.do* changer le thème par défaut avec **`set scheme nom_scheme`**.  \n\nJ'ai maintenant pour (bonne) habitude d'utiliser **`grstyle`** de Ben Jann (présentation dans la formation dédiée aux graphiques: <https://mthevenin.github.io/stata_graphiques/formation32.html#grstyle-de-b.jann>).   \nSelon l'humeur du moment, on peut générer un thème graphique visuellement bien plus qualitatif que les thèmes usines de Stata, avec seulement quelques arguments.  \n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\ngrstyle init\ngrstyle set imesh\ngrstyle set legend 11, nobox\ngrstyle set color tableau\n```\n:::\n\n\n\n**Penser à installer les packafes **`grstyle`** et **`colorpalette`** avant.\n\n\n## **Python**\n\n**Empêcher le bug graphique qui fait planter Stata avec Anaconda/miniconda**\n\nL'utilisation de conda - Anaconda ou miniconda -  n'est pas recommandé pour exécuter du code python dans un programme Stata. Pour preuve, sans les quelques lignes de codes qui suiven, l'exécution d'un graphique utilisant **`matplotlib`** risque de faire crasher la session Stata. C'est très désagréable.  Plutôt que d'insérer ce code dans le programme, il est préférable de le mettre une bonne fois pour toute dans le *profile.do* si python est utilisé via *conda*. \nMieux vaut vérifier la localisation exacte du répertoire *plugins*, je ne sais pas si le chemin qui suit vaut pour toutes les installation de miniconda/anaconda.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npython:\nimport os\nos.environ['QT_QPA_PLATFORM_PLUGIN_PATH']=\"C:\\\\Users\\\\thevenin_m\\\\Miniconda3\\\\Library\\\\plugins\\\\plugins\"\nend\n```\n:::\n\n\n\n:::\n\n\n# Exemple de profile.do\n\n::: callout-note\n Dans l'exemple qui suit, tout est mis en ligne de commentaire. Il suffit de retirer la balise `*` et de modifier les chemins si nécessaire. \n:::\n\n\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n\n**************************\n* profile.do Ined        *\n* M.Thevenin Ined-SMS    *\n**************************\n\n/* \n- Copier le programme ou une partie selon les besoins danx un .do\n- Désactiver les zônes de commentaire *\n- Enregistrer le fichier profile.do dans le répertoire unser\n- Seulement ici les paramètres que j'utilise. On peut, bien évidemment, en ajouter d'autres\n*/  \n  \n*****************************\n* ado + et personal dans D: *\n***************************** \n\n/* modifier les chemin si nécessaire */  \n  \n* sysdir set PLUS \"D:/D/ado/plus\"\n* sysdir set PERSONAL \"D:/D/ado/personal\"\n\n****************\n** STATA_TEMP **\n****************\n\n/* Créer un répertoire, pas forcément du même nom que celui ci et modifier les chemin */  \n  \n* cd \"D:\\D\\stata_temp\\\"\n\n*************************************************\n* affichage du contenu du repertoire stata_temp *\n*************************************************\n\n* noisily display as txt    \"------------------------------------\"\n* noisily display as result \"  Contenu du repertoire stata_temp  \"\n* noisily display as txt    \"------------------------------------\"\n* noisily dir \"D:/D/stata_temp/\"\n\n\n**************************************************\n* chargement du répertoire  $tmp dans stata_temp *\n**************************************************\n\n/* attention si plusieurs utilisateurs d'un même programme, le chemin de $tmp risque de ne pas être reconnu */\n\n* global tmp \"D:/D/stata_temp/\"\n\n\n\n\n******************************************\n* Creation automatique d'un fichier .log *\n******************************************\n\n/* changer le chemin à l'avant dernière ligne: log using.... */\n\n* capture log close statalog\n* local cdt = \"`c(current_date)'\"\n* local cdt: subinstr local cdt \" \" \"-\", all\n* local cti = \"`c(current_time)'\"\n* local cti: subinstr local cti \":\" \".\", all\n* local statalogname \"statalog_`cdt'_`cti'.log\"\n\n* noisily display \"Nom du log: `statalogname'\"\n*  log using \"D:/D/stata_temp/log/`statalogname'\" , text name(statalog)\n*  noisily display \"\"\n\n\n*****************\n* R source path *\n*****************\n\n* global Rterm_path `\"C:\\Program Files\\R\\R-4.1.2\\bin\\R.exe\"'\n\n* global Rterm_options `\"--slave --vanilla --args  \"`tf1'\" \"`tf2'\" \"'\n\n\n***************************************************\n* supprimer le blocage du défilement  de l'output *\n***************************************************\n\n* set more off\n\n*******************************\n* output regression           *\n*******************************\n\n/* nombre de decimales =3 */\n\n* set cformat %9.3f\n\n/* garder baselevel*/\n\n*set showbaselevels on\n\n*******************************\n*      graphique              *\n*******************************\n\n/* Installer au préalab grstyle et colorpalette */\n\n* grstyle init\n* grstyle set imesh\n* grstyle set legend 11, nobox\n* grstyle set color tableau\n\n\n*******************************\n*      python                 *\n*******************************\n\n/* chargement de l'exécutable */\n\n* capture  set python_exec  \"C:/Users/thevenin_m/AppData/Local/Programs/Python/Python310/python.exe\"\n\n\n****** plugin miniconda\n* python:\n* import os\n* os.environ['QT_QPA_PLATFORM_PLUGIN_PATH']=\"C:\\\\Users\\\\thevenin_m\\\\Miniconda3\\\\Library\\\\plugins\\\\plugins\"\n* end\n```\n:::\n",
    "supporting": [
      "profile_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}