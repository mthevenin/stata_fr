{
  "hash": "76ac1cafab9a23a4e4bdfca4a2d45b02",
  "result": {
    "markdown": "---\ntitle: '**Stata, Jupyter et Quarto: solution ultime avec nbstata**'\ntitle-block-banner: false\nauthor:\n  - name: Marc Thévenin\n    affiliations:\n      - name: Ined\ndate: 07/26/2023\ncategories:\n  - Notebook\n  - Quarto\n  - Jupyter\nformat:\n  html: default\nfilters:\n  - lightbox\nlightbox: auto\nabstract: |\n  putdoc, puthtml... Oublier! Depuis plusieurs années il est possible d'exécuter un programme Stata avec le notebook Jupyter avec le `Stata_kernel` de K.Barron ou plus récemment avec la librairie officielle `pystata` (version 17). Du côté de RStudio on pouvait également exécuter un programme Stata dans un document Rmarkdown, avec la librairie `statamarkdown`.  En 2022 avec l'arrivée de **Quarto**, évolution de  rmarkdown, et le nouveau noyau Jupyter **`nbstata`** de **Tim Huegerich**, on dispose d'une solution particulièrement efficace pour produire toute sorte de documentation (site, article, ouvrage).\n---\n\n* Documentation nbstata: <https://github.com/hugetim/nbstata>\n\n* Prérequis: Stata 17 minimum\n\n\nAvant de débuter ce tutoriel, concernant les avantages et les inconvénients d'utiliser le notebook Jupyter:   \n\n* Les graphiques sont afficher sous le programme et non dans une fenêtre externe.  \n\n* Le programme est exécuter dans des cellules de code et non dans un éditeur de programme. Avec Jupyter, les macros temporaires (`local`) restent enregistrer d'une cellule de code à une autre. \n\n* le noyau `nbstata` permet d'enregistrer l'ensemble des cellules dans un fichier .do.\n\n* Niveau inconvénient ou limite d'utilisation. Les notebooks ne permettent pas d'afficher à la volée la base de données ou la frame active. Son utilisation n'est donc pas forcément adaptée au traitement et à la manipulation d'une base de données.\n\n\n# Installation de Jupyter\n\nUne fiche dans la base d'assistance [**assistoolsms**](https://mthevenin.github.io/assistoolsms/) est déjà disponible\n[[Lien](https://mthevenin.github.io/assistoolsms/R/assist/posts/R_jupyter/R_jupyter.html#installation)]. A l'Ined l'installation est largement facilité avec l'outil **applined** mise à disposition par le service informatique.\n\nPour vérifier que tout est bien installer: \n\n- Vérification pour python:  dans Stata, exécuter **`python query`**, et éventuellement tester une opération simple: **`python: 1+1`**\n- Vérification pour Jupyther: pour lancer le notebook, dans l'invit de commande windows (cmd dans la barre de recherche), exécuter **`jupyter notebook`**\n\n\n![](anim1.gif)\n\n\n# Installation de nbstata\n\nLes étapes sont bien décrites dans le document de Tim Huegerich.\n\nDans l'invite de commande windows exécuter successivement (la troisième est optionnelle)\n\n```markdown\npip install nbstata\n```\n\nA minima: \n```markdown\npython -m nbstata.install\n```\n\nSi on souhaite récupérer la couleur syntaxique\n\n```markdown\npip install jupyterlab_stata_highlight2\n```\n\n# Utilisation de nbstata dans un notebook Jupyter\n\n* Dans *new* on choisit le kernel nbstata\n* Une fois le noyau chargé on peut exécuté dans les cellules une plusieurs lignes de programme.\n* Si on souhaite écrire du texte, on change le format de la cellule qui est par défaut *code*.\n* Pour afficher l'aide par exemple, on utilise un magik: `%help nom_commande`. La liste des magiks est donnée dans la documentation.\n* Contrairement à l'exécution de Stata dans son interface, les macro temporaires (`local`) sont conservées en mémoire d'une cellule à une autre. \n* On peut enregistrer l'ensemble des cellules en mode *code* dans un fichier .do\n\nEn résumé: \n\n![](anim2.gif)\n\nRemarque: on peut installer le notebook Jupyter dans VsCode. On peut donc l'utiliser comme interface pour documenter un programme au lieu d'un navigateur Web. En revanche, il ne sera pas possible de récupérer un .do à partir des commandes exécuter dans les cellules.\n\n\n# Utilisation de nbstata dans un document Quarto\n\n* On indique de le header de la page (yaml) l'utilisation de jupyter et du noyau nbstata\n\n```markdown\n---\ntitle: \"Exécution de Stata sous Quarto avec nbstata\n\njupyter: nbstata\n---\n```\n\n* Pour le bloc de codes sans option: on indique qu'on utilise stata: ```{stata}\n* Pour le bloc de code avec option, on remplace #| par *|, par exemple `*| echo:false` si on ne souhaite pas que le programme soit affiché.\n\n",
    "supporting": [
      "nbstata_files"
    ],
    "filters": [],
    "includes": {}
  }
}