[
  {
    "objectID": "maj.html",
    "href": "maj.html",
    "title": "Infos & maj",
    "section": "",
    "text": "2023\n\n\n\n\n26 Juin\n\nModification de l’architecture du support.\n\nLe contenu hors formation des sous supports graphiques et formation ont été déplacés dans le support d’accueil, sous forme d’articles de blog. La recherche thématique est se fait grâce à des tags (categories)\nLe contenu des supports graphiques et formation est exclusivement réservé aux formations initiale.\n\n\n15 mars\n\nMise à disposition d’une petite commande qui permet d’ajouter les effectifs sur un axe discret d’un graphique. On peut également l’appliquer à des tableaux de régressions (sans intéraction).\n\n27 février\n\nprésentation des frame dans le support programmation (section need for speed)\n\n\n\n\n\n\n\n\n\n\n2022\n\n\n\n\n07 décembre:\n\nInfo sur la nouvelle commande de Ben Jann violinplot (voir support sur les graphiques)\nMise à jour de la section conférence\n\n07 octobre:\n\nsommaire du numéro de septembre 2022 du Stata Journal\nEffet marginaux avec Stata et R (nouvelle librairie R)\n\n04 octobre: Générer des graphiques Python avec Stata: installation de Python, vérification de l’exécution sous stata, et deux exemples [Lien]\n30 septembre: présentation du package Statamarkdown (Doug Hemken), qui permet d’éditer des documents tout en exécutant un programme Stata avec RStudio [lien]\n06 septembre: Une première présentation de la suite collect pour paramétrer, enregistrer un style pour les tableaux, et de les exporter [lien]. Très intéressant à première vue\n05 septembre:\n\nLa barre de navigation est identique pour les 3 supports (merci Marion)\nStata Journal: les 4 derniers sommaires figureront sur la page\nVersion: ajout d’un point rapide sur la mise à jour du logiciel\n\n24 août: sur la forme, fin du passage de tous les supports en .qmd (Quarto).\n18 août: création d’un support dédié aux éléments de programmation (hors graphiques): lien\n26 juillet: une courte note sur les versions Stata utilisées à l’Ined.\n22 juillet: petite commande graphique en version alpha: gjoint. Permet de visualiser la distribution croisée de deux variables quantitatives avec la commande hexplot de Ben Jann, en reportant également les distributions marginales sour forme d’histogrammes.\n19 juillet: suivi des conférences Stata depuis 2020. Pour les conférences passées seulement celles dont les présentations sont disponibles.\n18 juillet: Commande gridge (MT) pour générer des courbes dites de ridge, avec je l’espère quelques apports, par rapport aux commandes existantes: (https://github.com/mthevenin/stata_graphiques/blob/main/ressources/gridge/Readme.md)\n06 juillet: Mise à jour du document sur les graphiques avec les chapitres 1 à 3: (https://raw.githubusercontent.com/mthevenin/stata_graphiques/main/v2_2022_chap123.pdf)\n21 juin: Commande fablot (NJ.Cox) pour contrôler les effets spaghetti: (https://github.com/mthevenin/stata_graphiques/blob/main/ressources/fabplot/Readme.md)\n03 Juin: Début de la refonte totale du support dans le cadre de la mise en place d’un groupe d’utilisatrices et d’utilisateurs de Stata à l’Ined."
  },
  {
    "objectID": "articles/index/posts/collect/collect.html",
    "href": "articles/index/posts/collect/collect.html",
    "title": "Editer des outputs avec collect",
    "section": "",
    "text": "Principe de la suite collect:\nA partir de la base nanhes21:"
  },
  {
    "objectID": "articles/index/posts/collect/collect.html#ols",
    "href": "articles/index/posts/collect/collect.html#ols",
    "title": "Editer des outputs avec collect",
    "section": "Ols",
    "text": "Ols\n\n\n\n\n\n\nWarning\n\n\n\nLorsqu’on génère un tableau avec collect avec un même style il me semble préférable d’exécuter systématiquement:\n\n\n\nSyntaxe\n\ncollect clear\ncollect use nom_style, replace\n\n\n\n\nEstimation du modèle avec collect\n\n\nqui: collect _r_b _r_se _r_p: regress bpsystol i.agegrp i.region\nqui: collect _r_b _r_se _r_p: regress bpsystol i.agegrp i.region i.sex\n\nModification du style pour ajouter le nom des modèles\n\ncollect label values cmdset 1 \"Modèle 1\" 2 \"Modèle 2\" \n\nOn peut également ajouter un titre, modifier les labels des variables, je pense aussi les libellées des colonnes pour les indicateurs (par exemple AME au lieu de Coefficient).\nPrévisualisation du tableau\n\ncollect preview\n\n/*\n------------------------------------------------------------------------------\n                            Modèle 1                       Modèle 2           \n                 Coefficient Std. error p-value Coefficient Std. error p-value\n------------------------------------------------------------------------------\nAge group 20–29        0.000      0.000               0.000      0.000        \n          30–39        2.891      0.664   0.000       2.917      0.661   0.000\n          40–49        9.580      0.716   0.000       9.584      0.713   0.000\n          50–59       18.324      0.713   0.000      18.384      0.710   0.000\n          60–69       24.184      0.574   0.000      24.193      0.571   0.000\n          70+         30.851      0.780   0.000      30.958      0.777   0.000\nRegion    NE           0.000      0.000               0.000      0.000        \n          MW          -0.023      0.595   0.969       0.033      0.592   0.956\n          S           -0.303      0.591   0.608      -0.227      0.588   0.699\n          W           -0.777      0.601   0.196      -0.745      0.599   0.213\nSex       Male                                        0.000      0.000        \n          Female                                     -4.015      0.402   0.000\nIntercept            117.632      0.589   0.000     119.672      0.621   0.000\n------------------------------------------------------------------------------\n*/  \n\nRemarque: on peut supprimer les baselines, mais je n’ai pas trouvé comment mettre par exemple ref pour la contrainte à 0.\nExportations\nJ’ai vu large pour l’exemple\n\n\n\n\n\n\nExportation latex\n\n\n\nMettre l’option tableonly pour que la balise d’ouverture soit celle d’un tableau et non d’un document.\n\n\n\ncollect export ex1, as(docx)     replace\ncollect export ex1, as(xls)      replace\ncollect export ex1, as(tex)      replace tableonly\ncollect export ex1, as(html)     replace\ncollect export ex1, as(markdown) replace\n\nEnsemble du programme (sauf la création du style multimod et les exportations)\n\ncollect clear\ncollect use multimod\n\nquietly: collect _r_b _r_se _r_p: regress bpsystol i.agegrp i.region\nquietly: collect _r_b _r_se _r_p: regress bpsystol i.agegrp i.region i.sex\n\ncollect label values cmdset 1 \"Modèle 1\" 2 \"Modèle 2\"\n\ncollect preview\n\n\nVisualisation des exportations\n\nWordExcelLatex (pdf)Markdown (Html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nle fichier tex1.tex généré avec collect export donne le tableau brut balisé. Le fichier peut être inséré dans un document Latex avec \\estauto{nom_fichier.tex} ou \\input{nom_fichier.tex}\n\nJuste une petite remarque sur les notes de bas de tableau. collect gère également leur présence et leur mise en forme, mais le code généré semble systématiquement les aligner au centre. A creuser, sinon il faut modifier le code Latex pour les aligner à gauche. Par exemple:\n\n\\multicolumn{3}{l}{\\footnotesize Note 1: blablabla}\\\\\n\\multicolumn{3}{l}{\\footnotesize Note 2: blablabla}\\\\\n\\end{tabular}\n\\end{table}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModèle 1\n\n\nModèle 2\n\n\n\n\n\n\n\n\nCoefficient\nStd. error\np-value\nCoefficient\nStd. error\np-value\n\n\nAge group\n20–29\nRef\nRef\n\nRef\nRef\n\n\n\n\n30–39\n2.891\n0.664\n0.000\n2.917\n0.661\n0.000\n\n\n\n40–49\n9.580\n0.716\n0.000\n9.584\n0.713\n0.000\n\n\n\n50–59\n18.324\n0.713\n0.000\n18.384\n0.710\n0.000\n\n\n\n60–69\n24.184\n0.574\n0.000\n24.193\n0.571\n0.000\n\n\n\n70+\n30.851\n0.780\n0.000\n30.958\n0.777\n0.000\n\n\nRegion\nNE\nRef\nRef\n\nRef\nRef\n\n\n\n\nMW\n-0.023\n0.595\n0.969\n0.033\n0.592\n0.956\n\n\n\nS\n-0.303\n0.591\n0.608\n-0.227\n0.588\n0.699\n\n\n\nW\n-0.777\n0.601\n0.196\n-0.745\n0.599\n0.213\n\n\nSex\nMale\n\n\n\nRef\nRef\n\n\n\n\nFemale\n\n\n\n-4.015\n0.402\n0.000\n\n\nIntercept\n\n117.632\n0.589\n0.000\n119.672\n0.621\n0.000\n\n\n\nLe tableau est un peu complexe, pour et les 3 premières lignes doivent être modifiée en md (je n’ai pas trouvé mieux pour l’instant):\nmd du fichier ex1.md\n\n|           |        | Modèle 1    |            |         | Modèle 2    |            |         |\n|           |        | Coefficient | Std. error | p-value | Coefficient | Std. error | p-value |\n|-----------|--------|-------------|------------|---------|-------------|------------|---------|\n| Age group | 20–29  | 0.000       | 0.000      |         | 0.000       | 0.000      |         |\n|           | 30–39  | 2.891       | 0.664      | 0.000   | 2.917       | 0.661      | 0.000   |\n|           | 40–49  | 9.580       | 0.716      | 0.000   | 9.584       | 0.713      | 0.000   |\n|           | 50–59  | 18.324      | 0.713      | 0.000   | 18.384      | 0.710      | 0.000   |\n|           | 60–69  | 24.184      | 0.574      | 0.000   | 24.193      | 0.571      | 0.000   |\n|           | 70+    | 30.851      | 0.780      | 0.000   | 30.958      | 0.777      | 0.000   |\n| Region    | NE     | 0.000       | 0.000      |         | 0.000       | 0.000      |         |\n|           | MW     | -0.023      | 0.595      | 0.969   | 0.033       | 0.592      | 0.956   |\n|           | S      | -0.303      | 0.591      | 0.608   | -0.227      | 0.588      | 0.699   |\n|           | W      | -0.777      | 0.601      | 0.196   | -0.745      | 0.599      | 0.213   |\n| Sex       | Male   |             |            |         | 0.000       | 0.000      |         |\n|           | Female |             |            |         | -4.015      | 0.402      | 0.000   |\n| Intercept |        | 117.632     | 0.589      | 0.000   | 119.672     | 0.621      | 0.000   |\n\nmd modifié (ligne 1 à 3\n\n|           |        | Modèle 1    |            |         | Modèle 2    |            |         |\n|-----------|--------|-------------|------------|---------|-------------|------------|---------|  \n|           |        | Coefficient | Std. error | p-value | Coefficient | Std. error | p-value |\n| Age group | 20–29  | 0.000       | 0.000      |         | 0.000       | 0.000      |         |\n|           | 30–39  | 2.891       | 0.664      | 0.000   | 2.917       | 0.661      | 0.000   |\n|           | 40–49  | 9.580       | 0.716      | 0.000   | 9.584       | 0.713      | 0.000   |\n|           | 50–59  | 18.324      | 0.713      | 0.000   | 18.384      | 0.710      | 0.000   |\n|           | 60–69  | 24.184      | 0.574      | 0.000   | 24.193      | 0.571      | 0.000   |\n|           | 70+    | 30.851      | 0.780      | 0.000   | 30.958      | 0.777      | 0.000   |\n| Region    | NE     | 0.000       | 0.000      |         | 0.000       | 0.000      |         |\n|           | MW     | -0.023      | 0.595      | 0.969   | 0.033       | 0.592      | 0.956   |\n|           | S      | -0.303      | 0.591      | 0.608   | -0.227      | 0.588      | 0.699   |\n|           | W      | -0.777      | 0.601      | 0.196   | -0.745      | 0.599      | 0.213   |\n| Sex       | Male   |             |            |         | 0.000       | 0.000      |         |\n|           | Female |             |            |         | -4.015      | 0.402      | 0.000   |\n| Intercept |        | 117.632     | 0.589      | 0.000   | 119.672     | 0.621      | 0.000   |\n\n\n\n\nPour la sortie, j’ai fait également quelques modifs au niveau du texte et changé les valeurs des baselines de 0.00 à Ref"
  },
  {
    "objectID": "articles/index/posts/collect/collect.html#margins-avec-mlogit",
    "href": "articles/index/posts/collect/collect.html#margins-avec-mlogit",
    "title": "Editer des outputs avec collect",
    "section": "Margins avec mlogit",
    "text": "Margins avec mlogit\n\nLe programme est très simple, et au final on arrive à produire rapidement un output très satisfaisant avec les résulats des différentes modalités en colonne.\nJe n’ai pas reproduit la fin du programme avec collect export.\n\nRappel: j’ai seulement reporté les AME pour seulement deux catégories excellent et poor\n\ncollect clear\ncollect use multimod\n\nqui mlogit hlthstat i.agegrp i.region i.sex i.race\nqui: collect _r_b _r_se _r_p: margins, dydx(*) predict(outcome(Excellent))\nqui: collect _r_b _r_se _r_p: margins, dydx(*) predict(outcome(Poor))\n\ncollect label values cmdset 1 \"Excellent\" 2 \"Poor\" \n\ncollect preview\n\n\n/*\n------------------------------------------------------------------------------\n                            Excellent                        Poor             \n                 Coefficient Std. error p-value Coefficient Std. error p-value\n------------------------------------------------------------------------------\nAge group 20–29        0.000          .       .       0.000          .       .\n          30–39       -0.028      0.015   0.066       0.008      0.004   0.031\n          40–49       -0.089      0.016   0.000       0.038      0.006   0.000\n          50–59       -0.185      0.014   0.000       0.079      0.008   0.000\n          60–69       -0.241      0.012   0.000       0.117      0.006   0.000\n          70+         -0.234      0.014   0.000       0.132      0.011   0.000\nRegion    NE           0.000          .       .       0.000          .       .\n          MW          -0.008      0.012   0.525       0.025      0.006   0.000\n          S           -0.060      0.012   0.000       0.064      0.007   0.000\n          W           -0.050      0.012   0.000       0.028      0.006   0.000\nSex       Male         0.000          .       .       0.000          .       .\n          Female      -0.039      0.008   0.000      -0.016      0.005   0.001\nRace      White        0.000          .       .       0.000          .       .\n          Black       -0.113      0.011   0.000       0.060      0.010   0.000\n          Other       -0.042      0.028   0.134      -0.011      0.017   0.526\n------------------------------------------------------------------------------\n*/  \n\n\nVisualisation des exportations\n\nWordExcelLatex (pdf)Markdown (Html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExcellent\n\n\nPoor\n\n\n\n\n\n\n\n\nCoefficient\nStd. error\np-value\nCoefficient\nStd. error\np-value\n\n\nAge group\n20–29\nRef\n.\n.\nRef\n.\n.\n\n\n\n30–39\n-0.028\n0.015\n0.066\n0.008\n0.004\n0.031\n\n\n\n40–49\n-0.089\n0.016\n0.000\n0.038\n0.006\n0.000\n\n\n\n50–59\n-0.185\n0.014\n0.000\n0.079\n0.008\n0.000\n\n\n\n60–69\n-0.241\n0.012\n0.000\n0.117\n0.006\n0.000\n\n\n\n70+\n-0.234\n0.014\n0.000\n0.132\n0.011\n0.000\n\n\nRegion\nNE\nRef\n.\n.\nRef\n.\n.\n\n\n\nMW\n-0.008\n0.012\n0.525\n0.025\n0.006\n0.000\n\n\n\nS\n-0.060\n0.012\n0.000\n0.064\n0.007\n0.000\n\n\n\nW\n-0.050\n0.012\n0.000\n0.028\n0.006\n0.000\n\n\nSex\nMale\nRef\n.\n.\nRef\n.\n.\n\n\n\nFemale\n-0.039\n0.008\n0.000\n-0.016\n0.005\n0.001\n\n\nRace\nWhite\n0.000\n.\n.\n0.000\n.\n.\n\n\n\nBlack\n-0.113\n0.011\n0.000\n0.060\n0.010\n0.000\n\n\n\nOther\n-0.042\n0.028\n0.134\n-0.011\n0.017\n0.526"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DERNIERS AJOUTS",
    "section": "",
    "text": "DERNIERS AJOUTS\nAccéder à la liste des articles\n\n\n\n\n\n\n\nNouvelle palette de couleurs et nouveau thème usine avec Stata 18\n\n\n\nStata 18\n\n\ngraphique\n\n\n\nLa palette s2 et le thème s2color, dépassés depuis bien longtemps ont été enfin remplacés. Cette courte fiche présente à l’aide de quelques visuels ces éléments de visualisation.\n\n\n\nMarc Thévenin\n\n\nJun 29, 2023\n\n\n\n\n\n\n\n\n\n\n\nAutosave des .do à partir de Stata 18\n\n\n\nStata 18\n\n\nautosave\n\n\n\nSans aucun doute une des fonctionalités les plus intéressantes de la version: enfin la présence d’une autosave des .do et .ado. On peut paramétrer la fréquence d’enregistrement automatique (par défaut 4 secondes).\n\n\n\nMarc Thévenin\n\n\nJun 27, 2023\n\n\n\n\n\n\n\n\n\n\n\nAjouter les effectifs sur un axe discret avec addnlab\n\n\n\ngraphique\n\n\nado\n\n\n\nUne petite commande sans grande prétention, mais peut-être utile, car elle permet d’ajouter sur l’axe discret d’un graphique, le nombre d’observations de chaque modalité. On peut également l’utiliser, avec une manipulation supplémentaire, pour les outputs de modèles.\n\n\n\nMarc Thévenin\n\n\nMar 15, 2023\n\n\n\n\n\n\n\n\n\n\n\nIntroduction aux frames (Stata 16)\n\n\n\nframe\n\n\n\nLes frames, introduites avec la version 16 de Stata, permettent de travailler parallèlement sur plusieurs bases de données, sans avoir à enregistrer/ouvrir. Un système de liaison entre frames revisite l’appariement des bases. Il s’avère particulièrement utile lorsqu’on alimente une base…\n\n\n\nMarc Thévenin\n\n\nFeb 23, 2023\n\n\n\n\n\n\n\n\n\n\n\nAméliorer la durée d’exécution avec Gtools\n\n\n\ngtools\n\n\nruntime\n\n\n\nLe package gtools de Mauricio Caceres Bravo permet d’améliorer significativement la durée d’exécution pour un certain nombre d’opérations, en particulier les transpositions de bases (reshape). Les éléments qui suivent proposent des éléments de benchmark avec les commandes usines et des…\n\n\n\nMarc Thévenin\n\n\nFeb 23, 2023\n\n\n\n\n\n\n\n\n\n\n\nFaire des graphiques sous Stata avec Python\n\n\n\ngraphique\n\n\npython\n\n\n\nIl s’agit d’une courte présentation de l’utilisation de Python sous Stata pour générer des graphiques. Après quelques éléments sur l’installation de Python et son utilisation avec Stata, trois exemples de graphiques sont données avec les librairies seaborn, plotnine (wrapper de…\n\n\n\nMarc Thévenin\n\n\nOct 3, 2022\n\n\n\n\n\n\n\n\n\n\n\nEditer des outputs avec collect\n\n\n\ntableaux\n\n\noutput\n\n\n\nLa suite collect introduite avec le version 17 va t-elle remplacer outreg2 et autres commandes de mise en forme et d’exportation de tableaux? Pas encore un tutoriel, dès éléments sont encore obscurs, mais avec quelques copier-coller issus des fichiers d’aides je présente juste deux…\n\n\n\nMarc Thévenin\n\n\nSep 26, 2022\n\n\n\n\n\n\n\n\n\n\n\nContrôler l’effet spaghetti avec fabplot (NJ.Cox)\n\n\n\ngraphique\n\n\nado\n\n\n\nLa commande fabplot programmée en 2021 par Nj.Cox permet de contrôler efficacement les effets dits spaghetti (courbes) ou paella (nuages de points). J’ai ajouté une option pour modifier les courbes au second plan, NJ.Cox ayant toujours tendance à bloquer l’habillage de ces commandes…\n\n\n\nMarc Thévenin\n\n\nSep 26, 2022\n\n\n\n\n\n\n\n\n\n\n\nDistributions croisées avec gjoint\n\n\n\ngraphique\n\n\nado\n\n\n\nPetite commande graphique en version alpha: gjoint. Permet de visualiser la distribution croisée de deux variables quantitatives avec la commande hexplot de Ben Jann, en reportant également les distributions marginales avec des d’histogrammes. Pas de gros changement à prévoir, si ce…\n\n\n\nMarc Thévenin\n\n\nSep 26, 2022\n\n\n\n\n\n\n\n\n\n\n\nVisualisation des densités avec gridge\n\n\n\ngraphique\n\n\nado\n\n\n\nDepuis 2020, des programmes permettent de générer de type lignes de crête: joyplot (A.Naqvi) et joy_plot (F.Rios-Avila). A partir d’un programme écrit à l’automne 2020, et en restant au plus près de la fonction ggridge de R, j’ai également (et modestement) programmé une commande.\n\n\n\nMarc Thévenin\n\n\nSep 26, 2022\n\n\n\n\n\n\n\n\n\n\n\nProgrammer un graphique Lollipop\n\n\n\ngraphique\n\n\n\nJ’étais complétement passé à côte de la fonction axis du package egenmore de Nj.Cox. Elle permet de construire un axe discret ordonné en récupérant automatiquement les labels d’une variable. Les programmes de la version 2000 pour générer des graphiques de types lollipop ou…\n\n\n\nMarc Thévenin\n\n\nSep 26, 2022\n\n\n\n\n\n\n\n\n\n\n\nConfigurer les sessions avec un profile.do\n\n\n\nprofile\n\n\n\nUn fichier profile.do est un programme qui s’éxécute à l’ouverture d’une session Stata. Ce programme comporte uniquement des éléments de configuration des sessions.\n\n\n\nMarc Thévenin\n\n\nSep 26, 2022\n\n\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n\n\n\n\nSupport réalisé avec Posit-Rstudio - Quarto.\nExécution de Stata dans Quarto: noyau Jupyter nbstata\nVersion Stata: 18-SE"
  },
  {
    "objectID": "presentation.html",
    "href": "presentation.html",
    "title": "Présentation rapide",
    "section": "",
    "text": "Accès direct par la barre de navigation\nFenêtre de recherche pour chaque support\nAccès au contenu via une barre horizontal\n\n\n\n\n\n\n\nNote\n\n\n\nTous les supports ont été réalisés avec Quarto [Rstudio] sorti officiellement le 29 Juillet 2022\n\n\n\n\n\nContenu plutôt succinct:\n\nSuivi des conférences: avec programme et information sur la mise à disposition des présentations\nStata Journal: accès direct au dernier numéro et lecture du dernier sommaire\nMe demander des veilles et biblio sur des thèmes particulier\nA faire: proposition d’ateliers et présentations (format court), voire de formation\n\n\n\n\n\n\n\n\nChapitres 1 à 3\nPas satisfait du chapitre 4 de 2020, je cherche encore\nUn cinquième chapitre sur les graphiques issus des librairies Python seaborn, plotnine et plotly [avec code simple]\n\n\n\n\nSérie d’articles courts, présenté sour forme de blog\n\nAvec Stata\n\nExemple: Commandes que j’ai programmées cet été (gridge, gjoint)\nSolution à l’effet Spaghetti avec fabplot de NJ.Cox\nLa commande axis de NJ Cox qui fait gagné un temps monstre par rapport à ce que j’avais fais pour les graphiques types lollipop et haltère. J’étais passé complètement au travers.\n\nAvec Python (seaborn, plotnine, plotline) sous un éditeur .do\n\n\n\n\nA faire très rapidement\n\nRemettre et actualiser la biblio de la formation de 2020\nSites sur la visualisation avec Stata. Exemple: site Medium d’Asjad Naqvi\n\n:::\n\n\n\n\nCréation très récente\n\nAvec contenu:\n\nfichier profile.do,\nAmélioration des durées d’exécution avec le package gtools\n\nPrésentation de quelques commandes associées\nBenchmark (jusqu’à 10M) avec commandes usines fonctions R\n\n\nSans contenu ou presque\n\nProgrammation avec les Macros, c’est incontournable.\n\nSi la programmation d’algorithme vous intéresse me le faire savoir\n\nStata &lt;=&gt; R forcément\n\nCela va pas vous intéresser, mais je dois remettre progressivement ma formation introductive qui très ancienne."
  },
  {
    "objectID": "presentation.html#ce-support-daccueil",
    "href": "presentation.html#ce-support-daccueil",
    "title": "Présentation rapide",
    "section": "",
    "text": "Contenu plutôt succinct:\n\nSuivi des conférences: avec programme et information sur la mise à disposition des présentations\nStata Journal: accès direct au dernier numéro et lecture du dernier sommaire\nMe demander des veilles et biblio sur des thèmes particulier\nA faire: proposition d’ateliers et présentations (format court), voire de formation"
  },
  {
    "objectID": "presentation.html#support-dédié-à-la-programmation-de-graphiques",
    "href": "presentation.html#support-dédié-à-la-programmation-de-graphiques",
    "title": "Présentation rapide",
    "section": "",
    "text": "Chapitres 1 à 3\nPas satisfait du chapitre 4 de 2020, je cherche encore\nUn cinquième chapitre sur les graphiques issus des librairies Python seaborn, plotnine et plotly [avec code simple]\n\n\n\n\nSérie d’articles courts, présenté sour forme de blog\n\nAvec Stata\n\nExemple: Commandes que j’ai programmées cet été (gridge, gjoint)\nSolution à l’effet Spaghetti avec fabplot de NJ.Cox\nLa commande axis de NJ Cox qui fait gagné un temps monstre par rapport à ce que j’avais fais pour les graphiques types lollipop et haltère. J’étais passé complètement au travers.\n\nAvec Python (seaborn, plotnine, plotline) sous un éditeur .do\n\n\n\n\nA faire très rapidement\n\nRemettre et actualiser la biblio de la formation de 2020\nSites sur la visualisation avec Stata. Exemple: site Medium d’Asjad Naqvi\n\n:::"
  },
  {
    "objectID": "presentation.html#support-dédié-à-la-programmation-hors-graphiques",
    "href": "presentation.html#support-dédié-à-la-programmation-hors-graphiques",
    "title": "Présentation rapide",
    "section": "",
    "text": "Création très récente\n\nAvec contenu:\n\nfichier profile.do,\nAmélioration des durées d’exécution avec le package gtools\n\nPrésentation de quelques commandes associées\nBenchmark (jusqu’à 10M) avec commandes usines fonctions R\n\n\nSans contenu ou presque\n\nProgrammation avec les Macros, c’est incontournable.\n\nSi la programmation d’algorithme vous intéresse me le faire savoir\n\nStata &lt;=&gt; R forcément\n\nCela va pas vous intéresser, mais je dois remettre progressivement ma formation introductive qui très ancienne."
  },
  {
    "objectID": "articles/index/posts/addnlab/addnlab.html",
    "href": "articles/index/posts/addnlab/addnlab.html",
    "title": "Ajouter les effectifs sur un axe discret avec addnlab",
    "section": "",
    "text": "Installation\n\nnet install addnlab, from(\"https://raw.githubusercontent.com/mthevenin/stata_graphiques/master/ressources/addnlab/\") replace\n\nSyntaxe\n\naddnlab varlist  [if/in] , [back]\n\n\nOn ne peut pas exécuter deux fois de suite si au moins une variable dans la liste a déjà les effectifs affecter au label.\nOn revient au label d’origine en ajoutant l’option back\n\nExemples Graphiques\n\nsysuse nlsw88, clear\nrecode occupation (9 10 11 12 = 13 )\n\naddnlab  occupation \ngridge wage, over(occupation) sortrev(mean) range(0 50) palette(flare) bw(.5)\naddnlab  occupation, back\n\n\n\n\n\n\n\ntw histogram wage, by(occupation, note(\" \"))    fc(\"225 50 67%80\") lc(black) lw(*.2) percent\n\n* penser à reaffecter le label d'origine\naddnlab  occupation, back\n\n\n\n\n\n\nSi on oublie de revenir sur le label d’origine avec l’option back et qu’on réexécute de nouveau addnlab occupation:\n\naddnlab occupation\n\nOne or more variables have already observations added to label\nFirst, execute: addnlab varlist, back\nvarlist: previous variable(s) added to addnlab\nExemple régression (ne pas utiliser avec des intéractions)\nVoir exemple ici"
  },
  {
    "objectID": "articles/index/posts/gridge/gridge.html",
    "href": "articles/index/posts/gridge/gridge.html",
    "title": "Visualisation des densités avec gridge",
    "section": "",
    "text": "La commande gridge permet, entre autres, de contrôler le tri les modalités de l’axe discret à partir d’une fonction autorisée avec egen (mean, median, sd….), de choisir librement un intervalle sur l’axe des abscisses pour éviter le report de valeurs sortant d’une borne acceptable (probabilité négatives ou supérieure à 1 dans l’exemple). Comme on estime des densités, le nombre d’observations minimales a été fixé à 10. Si ce critère n’est pas respecté, les valeurs de y en cause sont affichées. Des améliorations restent néanmoins à prévoir."
  },
  {
    "objectID": "articles/index/posts/gridge/gridge.html#exemple-1",
    "href": "articles/index/posts/gridge/gridge.html#exemple-1",
    "title": "Visualisation des densités avec gridge",
    "section": "Exemple 1",
    "text": "Exemple 1\nOuverture de la base\n\nwebuse set  \"https://raw.githubusercontent.com//mthevenin/stata_graphiques/master/ressources/gridge\"\nwebuse \"probability.dta\", clear\nwebuse set\n\nGraphique\n\n#delimit;\ngridge p , over(proba) \nrange(0 100) bw(2) \npalette(flare) op(90)\n\ngopts(title(\"Probabilités assignées\", pos(11))\ncaption(\"Source: Reddit\", size(*.5)) \nxtitle(\"probabilités (%)\")) \n;"
  },
  {
    "objectID": "articles/index/posts/gridge/gridge.html#exemple-2",
    "href": "articles/index/posts/gridge/gridge.html#exemple-2",
    "title": "Visualisation des densités avec gridge",
    "section": "Exemple 2",
    "text": "Exemple 2\nDans le premier exemple, les modalités de l’axe discret était ordonnée. Avec cet exemple, Le premier graphique représente la série de distributions suivant l’ordre des valeurs par défaut de la variable zône. Le second graphique avec l’option sort(median) trie de manière croissante les secteurs selon la valeur médiane du prix de la location, enfin le troisième applique un tri décroissant avec l’option sortrev(median).\nOuverture de la base\n\nwebuse set https://github.com/mthevenin/stata_graphiques/tree/main/bases\nuse rbnb_paris, replace\nwebuse set\n\nGraphique 1\n\ngridge price if price&lt;=300, over(zone) bw(4) gopts(title(\"Prix location Rbnb à Paris\", pos(11))) range(0 300)\n\nGraphique 2\n\n#delimit ;\ngridge price, \nover(zone)  super(2) palette(HCL heat2) bw(4) lc(2) lw(.8) sort(mean)\ngopts(title(\"Prix location Rbnb à Paris\", pos(11))) range(0 300) op(100)\n;\n\n\n\n\n\n\nGraphique 3\n\n#delimit ;\ngridge price, \nover(zone)  super(2) palette(HCL heat2) bw(4) lc(2) lw(.8) sortrev(mean) colrev\ngopts(title(\"Prix location Rbnb à Paris\", pos(11)))\n;"
  },
  {
    "objectID": "articles/index/posts/fabplot/fabplot.html",
    "href": "articles/index/posts/fabplot/fabplot.html",
    "title": "Contrôler l’effet spaghetti avec fabplot (NJ.Cox)",
    "section": "",
    "text": "Article Stata Journal\nJ’avais présenté le problème lors de la formation de 2020, mais avec un programme très compliqué. Cette commande très simple, permet de bien contrôler ce problème visualisation en utilisant sur deux objets graphiques l’option by…..pourquoi je n’y avais pas pensé."
  },
  {
    "objectID": "articles/index/posts/fabplot/fabplot.html#fabplot",
    "href": "articles/index/posts/fabplot/fabplot.html#fabplot",
    "title": "Contrôler l’effet spaghetti avec fabplot (NJ.Cox)",
    "section": "fabplot",
    "text": "fabplot\nCommande d’origine. L’objet en arrière plan n’est pas modifiable.\n\nssc install fabplot\n\n* help fabplot"
  },
  {
    "objectID": "articles/index/posts/fabplot/fabplot.html#fabplot2",
    "href": "articles/index/posts/fabplot/fabplot.html#fabplot2",
    "title": "Contrôler l’effet spaghetti avec fabplot (NJ.Cox)",
    "section": "fabplot2",
    "text": "fabplot2\nJ’ai juste ajouté l’option backopts. Même principe que l’option frontopts qui modifie l’objet au premier plan.\n\nnet install fabplot2, from(\"https://raw.githubusercontent.com/mthevenin/stata_graphiques/master/ressources/fabplot2/\") replace"
  },
  {
    "objectID": "articles/index/posts/fabplot/fabplot.html#exemple",
    "href": "articles/index/posts/fabplot/fabplot.html#exemple",
    "title": "Contrôler l’effet spaghetti avec fabplot (NJ.Cox)",
    "section": "Exemple",
    "text": "Exemple\n\nNote J’utilise systématiquement un thème que je génère avec le paquet grstyle de B.Jann.\n\nJe reprends le même exemple que pour la formation, avec la base babynames.\nOuverture de de la base:\n\nwebuse set \"https://raw.githubusercontent.com//mthevenin/stata_graphiques/master/ressources/fabplot2\"\nuse babynames, clear\nwebuse set\n\n\nEmpilement des 9 courbes\n….. C’est illisible\n\n* thème avec grstyle\ngrstyle init \ngrstyle set mesh\ngrstyle set color tableau, n(9)\n\n* Graphique\nlevelsof name, local(name)\nlocal i = 1\nforeach nom of local name  {\nlocal j = `i++' \nlocal line `line' line n year if name==\"`nom'\" ||       \nlocal leg `leg'  `j' \"`nom'\"\n}\n\ntw `line' , legend(order(`leg') row(2) size(*.8)  region(color(%0)) pos(11)) ytitle(\"\") ylabel(0(20000)100000, angle(0)) ///\ntitle(\"Popularité des prénoms\")"
  },
  {
    "objectID": "articles/index/posts/fabplot/fabplot.html#syntaxe-allégée",
    "href": "articles/index/posts/fabplot/fabplot.html#syntaxe-allégée",
    "title": "Contrôler l’effet spaghetti avec fabplot (NJ.Cox)",
    "section": "Syntaxe allégée",
    "text": "Syntaxe allégée\nfabplot[2] command yvar xvar [if] [in], by(byvar [,byopts]) [frontopts() backopts()] ....\n\nfabplot[2]: fabplot ou fabplot2\ncommand: line ou scatter\nby(byvar [,opts)]: indiquer à minima la variable catégorielle qui produira chaque sous graphique. Beaucoup d’options du graphique entre sans cette option, comme les titres ou la couleur du background\nfrontopts: les options de l’objet graphique en relief, comme la couleur et l’épaisseur de la courbe ou des marqueurs\nbackopts: avec fabplot2 seulement, les options de l’objet graphique en arrière plan."
  },
  {
    "objectID": "articles/index/posts/fabplot/fabplot.html#application",
    "href": "articles/index/posts/fabplot/fabplot.html#application",
    "title": "Contrôler l’effet spaghetti avec fabplot (NJ.Cox)",
    "section": "Application",
    "text": "Application\n\n#delimit ;\n\nfabplot2 line n year, \nby(name, title(\"Popularité des prénoms\", pos(11))) \n\nfrontopts(lw(*2) lc(\"45 178 125\")) \nbackopts(lw(*.5) lc(gs9)) \n\nytitle(\"\")  ylabel(0(20000)100000, labsize(*.8) glw(*.5))\n; \n\n#delimit cr\n\n\n\n\n\n\nProgramme .do"
  },
  {
    "objectID": "articles/index/posts/gjoint/gjoint.html",
    "href": "articles/index/posts/gjoint/gjoint.html",
    "title": "Distributions croisées avec gjoint",
    "section": "",
    "text": "Installation:\n\nnet install gjoint, from(\"https://raw.githubusercontent.com/mthevenin/stata_graphiques/master/ressources/gjoint/\") replace\n\nOuverture de la base\n\nwebuse set  \"https://raw.githubusercontent.com//mthevenin/stata_graphiques/master/ressources/gjoint\"\nwebuse \"logement.dta\", clear\nwebuse set\n\nExemple\n\ngjoint prix surface,  hopts(levels(10) fast) palette(flare, reverse) title(\"gjoint alpha\")\n\n\n\n\n\n\nRemarque: le temps d’exécution est de 6-7 secondes pour l’exemple (Stata 17 Se)"
  },
  {
    "objectID": "articles/index/posts/graph_python/python.html",
    "href": "articles/index/posts/graph_python/python.html",
    "title": "Faire des graphiques sous Stata avec Python",
    "section": "",
    "text": "Quelques généralités sur l’utilisation de Python avec Stata\nDans ce support, seul les graphiques seront exécutés avec Python, les manipulations en amont étant faite avec Stata. Seuls le chargement des bases seront effectués avec la fonction read_Stata de la librairie pandas."
  },
  {
    "objectID": "articles/index/posts/graph_python/python.html#installation-de-python",
    "href": "articles/index/posts/graph_python/python.html#installation-de-python",
    "title": "Faire des graphiques sous Stata avec Python",
    "section": "Installation de python",
    "text": "Installation de python\n\n\n\n\n\n\nInstallation à l’Ined\n\n\n\nVous pouvez maintenant installer directement Python avec l’application applined développée par le service informatique\n\n\nJe déconseille vivement d’installer Python via une distribution conda pour générer seulement des graphiques. Un bug systématique se produira lorsque qu’un script matplotlib sera exécuté, faisant crasher la session de Stata. On peut remédier à ce problème facilement via une ligne de programme à insérer dans un fichier .profile, mais autant éviter un problème que d’y remédier.\nWARNING Pour utiliser Python, vous devez avoir le même type de built pour les deux applications:\n\nStata 64 bits &lt;=&gt; Python 64 bits\nStata 32 bits &lt;=&gt; Pyhon 32 bits\n\nA l’Ined, la version Stata est en 64b\n\nPython 64 Installation Standard: https://www.python.org/downloads/windows/\nPython 32 Installation Standard: https://www.python.org/downloads/\n\n\n\n\n\n\n\nInstallation de Python\n\n\n\n\nCocher “Add Python 3.10 to PATH” (si version 3.10)\n\n\n\nVariable environnement\n\n\n\n\nAprès avoir cliquer sur Install Now conserver l’installation de pip qui permet de gérer les librairies, en particulier de les installer et de les mettre à jour\n\n\n\nInstallation de pip*\n\n\n\n\n\nVérification de la reconnaissance de Python sous Stata\n\npython query\n\n    Python Settings\n      set python_exec      C:/Users/thevenin_m/AppData/Local/Programs/Python/Py\n&gt; thon310/python.exe\n      set python_userpath  \n\n    Python system information\n      initialized          yes\n      version              3.10.5\n      architecture         64-bit\n      library path         C:\\Users\\thevenin_m\\AppData\\Local\\Programs\\Python\\Py\n&gt; thon310\\python310.dll\n\n\nTest exécution de python dans un .do\n\n\n\nDans un .do\n\npython: \nprint(\"Ined forever!!!!\")\n1+1\nend  \n\n\n----------------------------------------------- python (type end to exit) -----\n&gt;&gt;&gt; print(\"Ined forever!!!!\")\nIned forever!!!!\n&gt;&gt;&gt; 1+1\n2\n&gt;&gt;&gt; end  \n-------------------------------------------------------------------------------\n\n\nTest de reconnaisance des macros Stata avec Python\n\n\n\nDans un .do\n\nlocal  x=5\nglobal m \"Salut\"\n\npython: \nprint(\"$m\")\n`x'/2\nend  \n\n\n----------------------------------------------- python (type end to exit) -----\n&gt;&gt;&gt; print(\"$m\")\nSalut\n&gt;&gt;&gt; `x'/2\n2.5\n&gt;&gt;&gt; end  \n-------------------------------------------------------------------------------"
  },
  {
    "objectID": "articles/index/posts/graph_python/python.html#installation-des-libraries",
    "href": "articles/index/posts/graph_python/python.html#installation-des-libraries",
    "title": "Faire des graphiques sous Stata avec Python",
    "section": "Installation des libraries",
    "text": "Installation des libraries\nVérification des librairies installées\nDans le terminal windows pour garder le prompteur ouvert. 1\n\n\n\nDans le terminal de commande windows\n\npip list\n\n\nInstallation d’une librairie. De préférence dans le terminal\n\n\n\nDans le terminal de commande windows\n\npip install plotnine\n\n\nOu dans Stata:\n\n! pip install plotnine\n\nLibrairies nécessaire pour la suite de cette documentation: pandas (installe numpy), matplotlib, seaborn, plotnine, plotly\n\npip install pandas\npip install matplotlib\npip install seaborn\npip install plotnine\npip install plotly"
  },
  {
    "objectID": "articles/index/posts/graph_python/python.html#footnotes",
    "href": "articles/index/posts/graph_python/python.html#footnotes",
    "title": "Faire des graphiques sous Stata avec Python",
    "section": "Footnotes",
    "text": "Footnotes\n\n\ntouche windows + R et taper cmd dans la fenêtre qui s’ouvre / taper cmd dans la fenêtre de recherche de la barre de tache. On peut attacher le prompteur à la barre de tâche pour l’ouvrir directement par la suite↩︎"
  },
  {
    "objectID": "articles/index/posts/lollipop/lollipop.html",
    "href": "articles/index/posts/lollipop/lollipop.html",
    "title": "Programmer un graphique Lollipop",
    "section": "",
    "text": "* ssc install egenmore\n\nsysuse nlsw88, clear\ndrop if inlist(occupation,9,10,12) \n\negen mwage = mean(wage), by(occupation)\negen occ   = axis(mwage occupation) , label(occupation)\n\ntwoway scatter occ mwage ///\n|| dropline mwage occ, horizontal ///\n|| , ylab(1/10, valuelabel angle(0)) legend(off) \n\ndrop mwage occ // utiliser des variables temporaires si possible\n\nCommande axis (NJ.Cox)\n\nComme la fonction group (egen), elle va créer une variable ordinale occ à partir des valeurs prises par une variable, ici mwage.\nElle va affecter les labels de la variable occupation à la variable ordinale.\n\nJ’en ai profité pour découvrir l’option labelvalue de x/ylabel() qui permet d’affecter directement les labels d’une variable catégorielle sur un axe [A documenter dans la formation].\nSi on souhaite mettre comme valeur de base la moyenne des salaires moyens selon le groupe professionnel, on utilise simple l’option base() à laquelle on affecte la valeur moyenne des salaires récupérée en amont dans une macro:\n\n\n\n\n\n\nqui sum mwage, d\nlocal b = `r(mean)'\ntw dropline mwage occ, horizontal mlc(black) mlw(*.2) base(`b')  ///\n|| , ylab(1/10, valuelabel angle(0)) legend(off)                 ///\nxline(`b', noext lc(black)) title(\"Lollipop\", pos(11))           ///\nxtitle(\"Salaire moyen\") ytitle(\"Emploi\")\n\n[A faire]: les graphiques de type haltère. Il faudra passer par un collapse, mais le gain en terme de programmation est également non négligeable."
  },
  {
    "objectID": "articles/index/posts/gtools/gtools.html",
    "href": "articles/index/posts/gtools/gtools.html",
    "title": "Améliorer la durée d’exécution avec Gtools",
    "section": "",
    "text": "Stata 17: grosse amélioration du temps d’exécution de certaines commandes, en particulier sort et collapse.\nDepuis de nombreuses années des packages ou commandes standalone amélioraientt le temps d’exécution, en particulier les packages ftools de Sergio Correa ou les commandes fastxtile/fastwpctile d’egenmisc.\nLe package gtools de Mauricio Caceres Bravo donne des résultats vraiment très intéressants lorsqu’on atteint un seuil d’un million d’observations pour les commandes suivantes: greshape, gquantiles, gegen, glevelof avec une variable caractère, et dans une moindre mesure gcollapse.\nAu delà des durées d’exécution, ces packages et commandes peuvent avoir quelques options propres, par exemple, l’option by() de gquantiles ou la possibilité d’enregistrer les valeurs en ordre décroissant avec glevelsof.\n\nBenchmarks\n\nVersion Stata 17 SE. Les benchmarks réalisés par Mauricio Caceres sont en version MP.\nConfiguration PC: i5-10210U CPU et 16GO de RAM.\nVolumétries: 10k, 100k, 1M, 10M.\nComparaisons avec R si fonctions équivalentes.\nProgramme Stata: programme\nTo do: faire les tests sur la version serveur-linux (toujours Stata 17 SE)\n\nSources:\n\nStata 17 faster: https://www.stata.com/new-in-stata/faster-stata-speed-improvements/\nftools: https://github.com/sergiocorreia/ftools\ngtools:\n\nhttps://gtools.readthedocs.io/en/latest/index.html\nhttps://github.com/mcaceresb/stata-gtools\n\n\n\nLe package\nAuteur: Mauricio Caceres Bravo\nInstallation:\n\nhttps://gtools.readthedocs.io/en/latest/index.html\nhttps://github.com/mcaceresb/stata-gtools\n\nLes Benchmarks réalisés par l’auteur ont été exécutés avec Stata MP. J’ai fait tourné son programme (lien) avec Stata 17 SE sous windows. Les résultats sont les suivants:\n\n     Versus | Native | gtools | % faster \n ---------- | ------ | ------ | -------- \n   collapse |   1.53 |   1.25 |   18.51% \n   collapse |   1.68 |   1.17 |   29.91% \n    reshape |  31.63 |   6.90 |   78.19% \n    reshape |  60.26 |  10.95 |   81.83% \n      xtile |  17.74 |   1.12 |   93.67% \n     pctile |  18.20 |   0.77 |   95.76% \n       egen |   2.13 |   0.64 |   69.77% \n   contract |   4.52 |   1.74 |   61.54% \n       isid |  18.71 |   0.68 |   96.35% \n duplicates |  10.07 |   0.86 |   91.42% \n   levelsof |   2.75 |   0.44 |   83.94% \n   distinct |   7.24 |   0.44 |   93.88% \n     winsor |  16.09 |   0.65 |   95.99% \n sum_detail |  17.09 |   1.22 |   92.86% \n    tabstat |  11.18 |   0.67 |   94.03% \n range_stat |  67.37 |   2.82 |   95.81% \n\nPour mon propre benchmark, plus gourmand (10 variables quanti et une variable binaire), les données sont générées de la manière suivante:\nCréation de la base de données (N=10M)\n\nclear \nset obs 10000000\ntempvar x\ngen `x' = runiform()\ngen g = `x'&gt;.5\n\nforv i=1/10 {\ngen y`i' = rnormal()    \n    \ngen id = _n \n}\n\nPour récupérer les durées d’exécution, j’utilise un fragment du programme de M.Caceres. Les commandes sont exécutées avec le prefixe bench 1:\n\ncapture program drop bench\nprogram bench\n    gettoken timer call: 0,    p(:)\n    gettoken colon call: call, p(:)\n    cap timer clear `timer'\n    timer on `timer'\n    `call'\n    timer off `timer'\n    qui timer list\n    c_local r`timer' `=r(t`timer')'\nend\n\n\nLes tests sont réalisés avec les équivalents de xtile, reshape, collapseet levelsof. L’équivalent à tabstat sera ajouté rapidement.\nPour information, les programmes des fonctions R sont également rapidement décris. Les durées d’exécution ont été récupérés avec la librairie tictoc.\n\n\n\ngquantiles\n\nCommande usine xtile et pctile (help xtile). Le benchmark est seulement effectué pour xtile (affectation d’un quantile à une valeur) qui est plus gourmant que pctile (calcul et report des quantiles).\nEn termes d’options, l’autre intérêt de gquantile est de stratifier l’opération avec l’option by().\n\nSyntaxe courte\n\n\n*xtile\ngquantiles nouvelle_var = var1 , xtile  nq(#) [by(var2)]\n\n*pctile\ngquantiles nouvelle_var = var1 , pctile nq(#) [by(var2)] \n\nProgramme\n\n* Fonction bench (voir plus haut)\n\nqui forv i=1/10 {\n  \n** XTILE\n  \ntempvar yg`i'\nbench 1:   xtile `yg`i'' = y`i' ,  nq(10) \nlocal rt1 = `rt1' + `r1' \n  }\ndi \"XTILE runtime =\" `rt1'\n\n*** GQUANTILES\nqui forv i=1/10 {\ncapt drop  `yg`i''  \ntempvar yg`i'\nbench 1: gquantiles `yg`i'' = y`i' , xtile  nq(10) \nlocal rt2 = `rt2' + `r1'     \n   }\ndi  \"GQUANTILES runtime =\" `rt2'\n\nRésultats (secondes)\n\n\n\nStata\n10k\n100k\n1M\n10M\n\n\n\n\nxtile\n0.12\n1.65\n16.03\n196.56\n\n\ngquantiles\n0.06\n0.22\n1.24\n14.75\n\n\n\n\n\n\nR\n10k\n100k\n1M\n10M\n\n\n\n\nquantcut\n0.04\n0.24\n2.38\n29.11\n\n\nntile\n0.06\n0.16\n1.54\n15.51\n\n\n\n\n\n\n\n\n\nFonctions R\n\n\n\n\nquantcut\n\nlibrairie gtools\nSyntaxe pour la variable y1: df$gy1=quantcut(df$y1,10)\n\nntile\n\nlibrairie dplyr\nSyntaxe pour la variable y1: df=df %&gt;% mutate(gy1 = ntile(y1, 10))\n\n\n\n\n\n\ngreshape\n\nNiveau syntaxe peu de différence avec la commande usine, si ce n’est pour les arguments i() et j()\n\ni() = id()\nj() = key()\n\nPour R:\n\nFonction de base reshape.\n\nAvantage: syntaxe très proche de Stata\nInconvénients: temps d’exécution pas optimal. Pour 10M d’observations, j’ai arrêté l’exécution au bout de 10 minutes.\n\nFonctions pivot_longer et pivot_wider de **tydir.\n\n\nSi greshape est nettement plus performant que reshape, il reste nettement en deçà des deux fonctions de la librairie tydir de R.\nProgramme\n\n* Fonction bench (voir plus haut)\n\n**RESHAPE\nqui bench 1: reshape long y, i(id) j(j)\ndi \"RESHAPE LONG runtime =\" `r1'\nqui bench 1: reshape wide y, i(id) j(j)\ndi \"RESHAPE WIDE runtime =\" `r1'\n\n**GRESHAPE\nqui bench 1: greshape long y, by(id) keys(j)\ndi \"GRESHAPE LONG runtime =\" `r1'\nqui bench 1: greshape wide y, by(id) keys(j)\ndi \"GRESHAPE WIDE runtime =\" `r1'\n\nRésultats (secondes)\n\nLongWide\n\n\n\n\n\nStata\n10K\n100k\n1M\n10M\n\n\n\n\nreshape long\n0.14\n1.22\n12.36\n245.18\n\n\ngreshape long\n0.04\n0.21\n3.22\n61.23\n\n\n\n\n\n\nR\n10k\n100k\n1M\n10M\n\n\n\n\nreshape\n0.1\n1.19\n11.9\n///\n\n\npivot_longer\n0.01\n0.12\n0.6\n13.39\n\n\n\n\n\n\n\n\nStata\n10k\n100k\n1M\n10M\n\n\n\n\nreshape wide\n0.37\n2.18\n26.58\n338.10\n\n\ngreshape wide\n0.06\n0.30\n2.79\n55.86\n\n\n\n\n\n\nR\n10k\n100k\n1M\n10M\n\n\n\n\nreshape\n0.37\n3.69\n34.93\n///\n\n\npivot_wider\n0.01\n0.24\n1.98\n38.97\n\n\n\n\n\n\n\n\n\n\n\n\nFonctions R\n\n\n\n\nreshape\n\nInstallé avec R\nLong: long = reshape(gtools, idvar = \"id\", timevar=\"j\", varying = list(2:11), v.names = \"y\", direction = \"long\")\nWide: wide = reshape(long, idvar = \"id\",  timevar=\"j\",  v.names = \"y\", sep = \"\", direction = \"wide\")\n\npivot_longer/pivot_wider\n\nlibrairie tydir\nlong: long = pivot_longer(gtools, cols = starts_with(\"y\"))\nwide: wide = pivot_wider(long, names_from = c(\"name\"), values_from = c(\"value\"))\n\n\n\n\n\n\ngcollapse\n\nSyntaxe identique à celle de collapse. Par défaut, c’est également la moyenne qui est calculée.\nAjout d’une option merge replace qui remplace la valeur des observations par l’indicateur séléctionné.\nOn ajouté l’option by() sur la variable g (deux groupes).\n\nProgramme\n\n\n*** COLLAPSE\npreserve\nqui bench 1: collapse  y1-y10,  by(g)\nlocal col `r1'\nrestore\n\n*** GCOLLAPSE\npreserve\nqui bench 1: gcollapse  y1-y10,  by(g)\nlocal gcol `r1' \nrestore\n\ndi \"N=`N\"\ndi \"COLLAPSEruntime =\" `col'\ndi \"GCOLLAPSEruntime =\" `gcol'\n\nRésultats (secondes)\n\n\n\nStata\n10K\n100K\n1M\n10 M\n\n\n\n\ncollapse\n0.007\n0.041\n0.461\n7.846\n\n\ngcollapse\n0.021\n0.049\n0.219\n2.559\n\n\nR\n10K\n100K\n1M\n10 M\n\n\nsummarise\n0.03\n0.06\n0.3\n1.91\n\n\n\nNote: pour Stata le programme exécute preserve/restore, ce qui augmente légèrement un temps d’exécution\n\n\n\n\n\n\nFonction R\n\n\n\n\nsummarise()\n\nlibrairie dplyr\nSyntaxe : collapse= gtools %&gt;%  group_by(g) %&gt;%  summarise(across(y1:y10, ~ mean(.x, na.rm = TRUE)))\n\n\n\n\nProgramme\n\n\ngegen\n\nSyntaxe identique à celle d’egen. On a choisi comme fonction la moyenne.\nOn ajouté l’option by() sur la variable g (deux groupes).\n\n\nforv  i=1/10 {\nqui bench 1: egen my`i' = mean(y`i'), by(g)\nlocal egen = `egen' + `r1' \n}\n\ndrop my*\n\nforv  i=1/10 {\nqui bench 1: gegen my`i' = mean(y`i'), by(g)\nlocal gegen = `gegen' + `r1' \n}\n\ndi \"N=`N\"\ndi \"EGEN  runtime =\" `egen'\ndi \"GEGEN runtime =\" `gegen'\n\n\n\n\nStata\n10k\n100k\n1M\n10M\n\n\n\n\negen\n0.23\n0.41\n4.82\n73.6\n\n\ngegen\n0.69\n0.20\n0.83\n8.88\n\n\nR\n10k\n100k\n1M\n10M\n\n\nmutate + mean\n0.03\n0.05\n0.17\n1.74\n\n\n\n\n\n\n\n\n\nFonction R\n\n\n\n\nmutate() associée à la fonction mean\n\nlibrairie dplyr\nSyntaxe :\n\nvar &lt;- c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\", \"y6\", \"y7\", \"y8\", \"y9\", \"y10\")\ngtools = gtools %&gt;% group_by(g) %&gt;% mutate(across(var, mean, .names = \"m{col}\"))\n\n\n\n\n\n\n\nglevelsof\n\n\n\n\n\n\nRappel\n\n\n\n\nLa commande levelsof (help levelsof) permet de récupérer automatiquement les valeurs d’une variable pour les transformer sous forme de macro. Par défaut la macro enregistrée est nommée r(levels), il est possible de l’appeler différemment avec l’option local(). Elle est particulièrement utile en amont d’une opération en boucle de type foreach. La macro générée r(r) permet de récupérer le nombre de valeurs enregistrés, et peut donc être utile pour des instructions en boucle de type forvalue (et évite de programmer une macro avec la fonction word count plus loin).\nLes valeurs sont enregistrées par ordre croissant numérique ou alphabétique selon le type de variable.\n\n\n\nglevelsof\n\nAutorise plusieurs variables. la macro enregistrée concaténera les valeurs et/ou expression avec un séparateur (espace par défaut).\nPermet de trier les valeurs en ordre décroissant en ajoutant - devant le nom de la variable.\n\nbenchmark\n\nBien évidemment, pas de comparaison possible avec R\nProgramme d’origine différent: on va générer une variable qui affecte aléatoirement une lettre de l’alphabet (une version caractère et une version numérique générée avec encode). Le programme a été écrit par Paul Picard sur le forum Statalist (lien)\n\n\nclear\nset obs 10000\nlocal c2use ABCDEFGHIJKLMNPQRSTUVWXYZ\ngen random_string = substr(\"`c2use'\", runiformint(1,length(\"`c2use'\")),1) + ///\n    string(runiformint(0,9)) + ///\n    char(runiformint(65,90)) + ///\n    char(runiformint(65,90)) + ///\n    string(runiformint(0,9)) + ///\n    char(runiformint(65,90))\n\ngen xchar = substr(random_string,1,1)\nencode xchar, gen(xnum)\ndrop random_string\n\nLevelsof :\n\nlevelsof xchar\n\n/*\n`\"A\"' `\"B\"' `\"C\"' `\"D\"' `\"E\"' `\"F\"' `\"G\"' `\"H\"' `\"I\"' `\"J\"' `\"K\"' `\"L\"' `\"M\"' `\"N\"' `\"P\"' `\"Q\"' `\n&gt; \"R\"' `\"S\"' `\"T\"' `\"U\"' `\"V\"' `\"W\"' `\"X\"' `\"Y\"' `\"Z\"'\n*/\n\nlevelsof xnum\n\n/*\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n*/\n\nGlevelsof avec valeurs enregistrées en ordre décroissant:\n\nglevelsof -xchar\n\n`\"Z\"' `\"Y\"' `\"X\"' `\"W\"' `\"V\"' `\"U\"' `\"T\"' `\"S\"' `\"R\"' `\"Q\"' `\"P\"' `\"N\"' `\"M\"' `\"L\"' `\"K\"' `\"J\"' \n` \"I\"' `\"H\"' `\"G\"' `\"F\"' `\"E\"' `\"D\"' `\"C\"' `\"B\"' `\"A\"'\n\nglevelsof -xnum\n\n25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\n\n\n\n\nVariable caractère\n10k\n100k\n1M\n10M\n\n\n\n\nlevelsof\n0.01\n0.10\n2.64\n42.51\n\n\nglevelsof\n0.01\n0.01\n0.11\n0.62\n\n\n\n\n\n\nVariable numerique\n10k\n100k\n1M\n10M\n\n\n\n\nlevelsof\n0.01\n0.01\n0.09\n1.04\n\n\nglevelsof\n0.00\n0.01\n0.04\n0.32"
  },
  {
    "objectID": "articles/index/posts/profile/profile.html",
    "href": "articles/index/posts/profile/profile.html",
    "title": "Configurer les sessions avec un profile.do",
    "section": "",
    "text": "Exemples de configurations qui peuvent être ajoutées :\n\nCréation d’un log de session automatique [surement caduc avec le système de backup (4 secondes) des programmes avec la version 18).\nAffectation d’un répertoire temporaire autre que celui par défaut.\nModification de la localisation du répertoire ado plus (il est conseillé mettre sur le lecteur D à l’Ined ou tout autre lecteur que le C:).\nToutes les commandes de paramétrisation préfixées par set: contrôle du défilement de l’output, affichage du nombre de décimales dans les tableaux de régression etc…\nParamètres des graphiques: thèmes, police d’affichage… Je conseille d’utiliser à minima grstyle de Ben Jann.\nToutes les commandes sont donc insérées dans un seule programme, il est possible de les activer, de les désactiver ou de les modifier très facilement selon l’usage du moment.\n\n\nCréation et modification d’un fichier profile.do\nLe fichier profile.do doit être impérativement enregistré dans le répertoire user:\n\n\nWindows: \"C:/Users/nom_user/\"\nLinux (serveur Margaux): \"home/Users/nom_user/\"\n\n\nUne fois le programme enregistré, son effet n’est pris en compte que pour les sessions ouvertes ultérieurement et non sur celles en cours. Le programme est chargé uniquement à l’ouverture d’une session, un message apparait dans l’output:\n\n\n\n\n\nPour faciliter l’ouverture et l’enregistrement du fichier sous windows sans avoir à se promener dans l’explorateur de fichiers, on peut enregistrer la localisation du répertoire user avec une macro de type global, ici appelée user, et l’ouvrir rapidement avec l’invite de commande windows sous Stata (! ou shell).\nAffectation du répertoire user dans une macro:\n\nglobal user \"C:/Users/nom_user/\"\n\nOuverture du fichier profile.do avec l’invite de commande:\n\n! $user/profile.do\n\n\n\nExemples\nLes quelques exemples de configurations qui suivent sont forcément orientés vers mon propre usage.\n\nadoplusRépertoire temporaireLog automatiqueCommandes de type setGraphiquesPython\n\n\nChangement de la localisation du répertoire où sont enregistrées les commandes externes. Il est préférable de les localiser dans un lecteur autre que le lecteur C:\n\nsysdir set PLUS \"D:/D/ado/plus\"\nsysdir set PERSONAL \"D:/D/ado/personal\"\n\n\n\nOn peut créer un répertoire qui fera office de répertoire d’enregistrement par défaut des fichiers, et affecter les opérations d’ouvertures et de sauvegardes dans ce répertoire.\n\n* Après création du répertoire stata_temp\ncd \"D:\\D\\stata_temp\\\"\n\nC’est très optionnel: on peut demander à Stata d’afficher à l’ouverture le contenu de ce répertoire\n\nnoisily display as txt    \"------------------------------------\"\nnoisily display as result \"  Contenu du repertoire stata_temp  \"\nnoisily display as txt    \"------------------------------------\"\nnoisily dir \"D:/D/stata_temp/\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSi on change dans un programme le répertoire d’affectation par défaut avec cd, ce répertoire stata_temp ne sera plus reconnu comme répertoire par défaut.\nPour palier ce problème on peut affecter une macro à la localisation de ce répertoire.\n\nglobal tmp \"D:/D/stata_temp/\"\n\n\ncd \"path/mon_projet\"  \n\nuse base, clear\nkeep if x==1\nsave $tmp/base_x1, replace\n\nCette solution comporte néanmoins des limites lorsque le programme est utilisé par plusieurs personnes.\n\n\nLa plus utile de toutes les configurations décrites ici.\nAu préalable, je conseille de créer un répertoire d’enregistrement pour ces fichiers logs. Je les enregistre dans un sous répertoire de stat_temp appelé tout simplement log.\n\ncapture log close statalog\nlocal cdt = \"`c(current_date)'\"\nlocal cdt: subinstr local cdt \" \" \"-\", all\nlocal cti = \"`c(current_time)'\"\nlocal cti: subinstr local cti \":\" \".\", all\nlocal statalogname \"statalog_`cdt'_`cti'.log\"\n\nlog using \"$user/stata_temp/log/`statalogname'\" , text name(statalog)\n\nPour le chemin d’accès, j’utilise le répertoire user enregistré sous forme d’une macro (voir plus haut).\nDans ce répertoire sont enregistrés tous les log de session depuis le 1er février 2022.\n\n\n\n\n\n\n\n\n\nIl n’est pas nécessaire d’ajouter l’option permanently comme le fichier profile est chargé à chaque ouverture de session.\nEnsemble des commandes préfixées par set: help set\n\n\nExemple 1: nombre de décimales reportées dans l’output d’une régression avec set cformats (coef, se et bornes ci), set sformats (statistique du test) et set pformats (p-value).\nSi on souhaite fixer le nombre de décimale pour l’ensemble des statistiques à 2\n\nset cformats %9.2f   // max longueur =9\nset sformats %9.2f   // max longueur =8\nset pformats %9.2f   // max longueur =5\n\nExemple 2: déblocage du défilement de l’output\n\nset more off\n\n\n\nDe nouveau avec une commande de type set on peut dans son fichier profile.do changer le thème par défaut avec set scheme nom_scheme.\nJ’ai maintenant pour (bonne) habitude d’utiliser grstyle de Ben Jann (présentation dans la formation dédiée aux graphiques: https://mthevenin.github.io/stata_graphiques/formation32.html#grstyle-de-b.jann).\nSelon l’humeur du moment, on peut générer un thème graphique visuellement bien plus qualitatif que les thèmes usines de Stata, avec seulement quelques arguments.\n\ngrstyle init\ngrstyle set imesh\ngrstyle set legend 11, nobox\ngrstyle set color tableau\n\nPenser à installer les packafes grstyle** et colorpalette avant.\n\n\nEmpêcher le bug graphique qui fait planter Stata avec Anaconda/miniconda\nL’utilisation de conda - Anaconda ou miniconda - n’est pas recommandé pour exécuter du code python dans un programme Stata. Pour preuve, sans les quelques lignes de codes qui suiven, l’exécution d’un graphique utilisant matplotlib risque de faire crasher la session Stata. C’est très désagréable. Plutôt que d’insérer ce code dans le programme, il est préférable de le mettre une bonne fois pour toute dans le profile.do si python est utilisé via conda. Mieux vaut vérifier la localisation exacte du répertoire plugins, je ne sais pas si le chemin qui suit vaut pour toutes les installation de miniconda/anaconda.\n\npython:\nimport os\nos.environ['QT_QPA_PLATFORM_PLUGIN_PATH']=\"C:\\\\Users\\\\thevenin_m\\\\Miniconda3\\\\Library\\\\plugins\\\\plugins\"\nend\n\n\n\n\n\n\nExemple de profile.do\n\n\n\n\n\n\nNote\n\n\n\nDans l’exemple qui suit, tout est mis en ligne de commentaire. Il suffit de retirer la balise * et de modifier les chemins si nécessaire.\n\n\n\n\n**************************\n* profile.do Ined        *\n* M.Thevenin Ined-SMS    *\n**************************\n\n/* \n- Copier le programme ou une partie selon les besoins danx un .do\n- Désactiver les zônes de commentaire *\n- Enregistrer le fichier profile.do dans le répertoire unser\n- Seulement ici les paramètres que j'utilise. On peut, bien évidemment, en ajouter d'autres\n*/  \n  \n*****************************\n* ado + et personal dans D: *\n***************************** \n\n/* modifier les chemin si nécessaire */  \n  \n* sysdir set PLUS \"D:/D/ado/plus\"\n* sysdir set PERSONAL \"D:/D/ado/personal\"\n\n****************\n** STATA_TEMP **\n****************\n\n/* Créer un répertoire, pas forcément du même nom que celui ci et modifier les chemin */  \n  \n* cd \"D:\\D\\stata_temp\\\"\n\n*************************************************\n* affichage du contenu du repertoire stata_temp *\n*************************************************\n\n* noisily display as txt    \"------------------------------------\"\n* noisily display as result \"  Contenu du repertoire stata_temp  \"\n* noisily display as txt    \"------------------------------------\"\n* noisily dir \"D:/D/stata_temp/\"\n\n\n**************************************************\n* chargement du répertoire  $tmp dans stata_temp *\n**************************************************\n\n/* attention si plusieurs utilisateurs d'un même programme, le chemin de $tmp risque de ne pas être reconnu */\n\n* global tmp \"D:/D/stata_temp/\"\n\n\n\n\n******************************************\n* Creation automatique d'un fichier .log *\n******************************************\n\n/* changer le chemin à l'avant dernière ligne: log using.... */\n\n* capture log close statalog\n* local cdt = \"`c(current_date)'\"\n* local cdt: subinstr local cdt \" \" \"-\", all\n* local cti = \"`c(current_time)'\"\n* local cti: subinstr local cti \":\" \".\", all\n* local statalogname \"statalog_`cdt'_`cti'.log\"\n\n* noisily display \"Nom du log: `statalogname'\"\n*  log using \"D:/D/stata_temp/log/`statalogname'\" , text name(statalog)\n*  noisily display \"\"\n\n\n*****************\n* R source path *\n*****************\n\n* global Rterm_path `\"C:\\Program Files\\R\\R-4.1.2\\bin\\R.exe\"'\n\n* global Rterm_options `\"--slave --vanilla --args  \"`tf1'\" \"`tf2'\" \"'\n\n\n***************************************************\n* supprimer le blocage du défilement  de l'output *\n***************************************************\n\n* set more off\n\n*******************************\n* output regression           *\n*******************************\n\n/* nombre de decimales =3 */\n\n* set cformat %9.3f\n\n/* garder baselevel*/\n\n*set showbaselevels on\n\n*******************************\n*      graphique              *\n*******************************\n\n/* Installer au préalab grstyle et colorpalette */\n\n* grstyle init\n* grstyle set imesh\n* grstyle set legend 11, nobox\n* grstyle set color tableau\n\n\n*******************************\n*      python                 *\n*******************************\n\n/* chargement de l'exécutable */\n\n* capture  set python_exec  \"C:/Users/thevenin_m/AppData/Local/Programs/Python/Python310/python.exe\"\n\n\n****** plugin miniconda\n* python:\n* import os\n* os.environ['QT_QPA_PLATFORM_PLUGIN_PATH']=\"C:\\\\Users\\\\thevenin_m\\\\Miniconda3\\\\Library\\\\plugins\\\\plugins\"\n* end"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Marc Thévenin",
    "section": "",
    "text": "Sms-Ined\n\n\n\n\n\n\nLiens Ined\n\n\n\n\nSite de l’Ined\nSite du Service Méthodes Statistiques\nSite des Rencontres de Statistique Appliquée\nSite du séminaire R à l’Usage des Sciences Sociales (RUSS)\n\n\n\n\n\n\n\n\n\nAutres supports\n\n\n\n\nFormation analyse des durées (2017-2020): https://mthevenin.github.io/analyse_duree/\nSupport d’assistances du Service Méthodes Statistiqueshttps://mthevenin.github.io/assistoolsms/"
  },
  {
    "objectID": "ado/testpal/Readme.html",
    "href": "ado/testpal/Readme.html",
    "title": "Commande testpal",
    "section": "",
    "text": "Permet de tester une palette sur un graphique témoin\n\n\nnet install testpal, from(\"https://raw.githubusercontent.com/mthevenin/stata_fr/master/ado/testpal/\") replace\n\n\n\ntestpal nom_palette , [rev] [op(#)] [bf(#)]\n\nrev: inverse l’ordre des couleurs de la palette\nop(#): modifie le pourcentage d’opacité des couleurs. Par défaut l’opacité est de 100%: op(100). # est compris entre 0+ et 100.\nbf(#): permet de modifier la clarté de la couleur de fond des graphiques de la seconde colonne (fixé à blanc pour la première). # est une valeur comprise entre 1 (noir) et 14 (presque blanc).\n\n\n\n\nCollection Brewer, palette YlGnBu:\ntestpal YlGnBu, rev op(50) bf(5) \n\nCollection tableau, palette 10:\ntestpal tab 10 , rev op(100) bf(1)"
  },
  {
    "objectID": "ado/testpal/Readme.html#installation",
    "href": "ado/testpal/Readme.html#installation",
    "title": "Commande testpal",
    "section": "",
    "text": "net install testpal, from(\"https://raw.githubusercontent.com/mthevenin/stata_fr/master/ado/testpal/\") replace"
  },
  {
    "objectID": "ado/testpal/Readme.html#syntaxe",
    "href": "ado/testpal/Readme.html#syntaxe",
    "title": "Commande testpal",
    "section": "",
    "text": "testpal nom_palette , [rev] [op(#)] [bf(#)]\n\nrev: inverse l’ordre des couleurs de la palette\nop(#): modifie le pourcentage d’opacité des couleurs. Par défaut l’opacité est de 100%: op(100). # est compris entre 0+ et 100.\nbf(#): permet de modifier la clarté de la couleur de fond des graphiques de la seconde colonne (fixé à blanc pour la première). # est une valeur comprise entre 1 (noir) et 14 (presque blanc)."
  },
  {
    "objectID": "ado/testpal/Readme.html#exemples",
    "href": "ado/testpal/Readme.html#exemples",
    "title": "Commande testpal",
    "section": "",
    "text": "Collection Brewer, palette YlGnBu:\ntestpal YlGnBu, rev op(50) bf(5) \n\nCollection tableau, palette 10:\ntestpal tab 10 , rev op(100) bf(1)"
  },
  {
    "objectID": "conferences.html",
    "href": "conferences.html",
    "title": "Conférences",
    "section": "",
    "text": "Liste non exhaustive des conférences depuis 2019. J’ai sélectionné les conférences dont les présentations sont disponibles et principalement en anglais.\n\n\n\n\n\n\n2023\n\n\n\n\nFR: https://www.stata.com/meeting/france23/\n\nPrésentations disponibles\n\nVirtual symposium (biostatistique et épidémiologie): https://www.stata.com/symposiums/biostatistics-and-epidemiology23/\n\nPrésentations disponibles\n\nAUS: https://www.stata.com/meeting/oceania23/\n\nPrésentations et/ou vidéos disponibles\n\n\n\n\n\n\n\n\n\n\n2022\n\n\n\nBeaucoup de conférences prévues à l’automne, en particulier celle qui se déroulera en angleterre.\n\nVirtual symposium: https://www.stata.com/symposiums/economics22/\n\nCertaines présentations disponibles\n\nCH: https://www.stata.com/meeting/switzerland22/\n\nprésentations disponibles.\n\nUK: https://www.stata.com/meeting/uk22/\n\nPrésentations disponibles.\n\nUS: https://www.stata.com/meeting/us22/\n\nPrésentations disponibles\n\nFR: https://www.stata.com/meeting/france22/\n\nEconométrie appliquée, pas d’éléments propres à la programmation ou aux mises à jour du logiciel\nCertaines présentations sont disponibles\n\nIT: https://www.stata.com/meeting/italy22/\n\n\n\n\n\n\n\n\n\n2021\n\n\n\n\nUSA: https://www.stata.com/meeting/us21/\nUK: https://www.stata.com/meeting/uk21/\nCAN: https://www.stata.com/meeting/canada21/\n\n\n\n\n\n\n\n\n\n2020\n\n\n\n\nUSA: https://www.stata.com/meeting/us20/\n\nVoir: The causal effects of parents’ marital status on children’s earnings\n\nUK: https://www.stata.com/meeting/uk20/\nCH: https://www.stata.com/meeting/switzerland20/\nPOR: https://www.stata.com/meeting/portugal20/\n\n\n\n\n\n\n\n\n\n2019\n\n\n\n\nUSA: https://www.stata.com/meeting/chicago19/\nUK: https://www.stata.com/meeting/uk19/\nAUS: https://www.stata.com/meeting/oceania19/"
  },
  {
    "objectID": "Stata_journal.html",
    "href": "Stata_journal.html",
    "title": "Stata Journal",
    "section": "",
    "text": "Accès au dernier numéro [connexion Campus Condorcet] :\nhttps://journals-sagepub-com.ezproxy.campus-condorcet.fr/toc/stja/current\nSommaire des 4 derniers numéros. Les sommaires antérieurs sont disponibles à cette adresse lien\n\n2023-22023-12022-42022-3"
  },
  {
    "objectID": "articles/index/posts/autosave/autosave.html",
    "href": "articles/index/posts/autosave/autosave.html",
    "title": "Autosave des .do à partir de Stata 18",
    "section": "",
    "text": "Pour faire très court:\n\nPenser à ce que le fichier soit sauvegardé\nOn peut paramétrer la fréquence de sauvegarde dans les préférences de l’éditeur [edit=&gt;preference=&gt;onglet Advanced]. Par défaut la fréquence est de 4 secondes, ce qui semble suffisant.\nAprès un crash, ou autre mésaventure, il sera proposer d’ouvrir le fichier sauvegardé automatiquement.\nPenser à enregistrer le programme de récupération avec le nom original."
  },
  {
    "objectID": "articles/index/posts/frame/frame.html",
    "href": "articles/index/posts/frame/frame.html",
    "title": "Introduction aux frames (Stata 16)",
    "section": "",
    "text": "Les frames on été implémentées à Stata à partir de la version 16 (2019). Elles n’améliorent pas directement les durées d’éxécution, mais en donnant la possibilité de travailler simultanément sur plusieurs bases simultanément sans multiplier les opérations d’ouverture ou de sauvegarde, elles permettent de “gagner du temps”. Mieux encore, elles ont été pensées pour faciliter les fusions et les manipulations d’informations entre bases de données en implémentant une alternative aux merge via une logique de liaison.\nLes frames ont été pensées pour faciliter le travail de programmation entre bases individuelles et bases contextuelles.\n\n\n\n\n\n\nNote\n\n\n\nLa version 18 de Stata implémente le format .dtas qui permet de sauvergadrer une collection de frames et leurs liaisons.\n\n\nLa présentation des frames se fera par l’exemple, avec la base nhanes2:\n\ncréer plusieurs frames à partir d’une base source (nhanes2).\ncollapser des informations dans une frame\nlier deux frames et importer des variables d’une frame à une autre .\n\ngénérer des variables dans une frame en utilisant des informations issues d’une ou plusieurs autres frame.\n\nDepuis Stata 16, à chaque base active est associée une frame nommée default. On peut récupérer l’information sur les frames créées lors d’une session avec les instruction frame dir ou frame list. Le nombre de lignes (observations) et colonnes (variables) sont indiquées.\nOn ouvre une session avec Stata, la frame * default* avec 0 ligne et 0 colonnes est indiquée avec frame dir.\n\nframe dir \n\n  default  0 x 0\n\n\nOn ouvre une base, et de nouveau avec frame dir:\n\nclear\nwebuse nhanes2\n\nframe dir \n\ndes, s\n\n  default  10351 x 58; nhanes2.dta\n\nContains data from https://www.stata-press.com/data/r17/nhanes2.dta\n Observations:        10,351                  \n    Variables:            58                  20 Dec 2020 10:07\nSorted by: \n\n\nOn souhaite renommer cette frame default, par exemple nhanes: frame rename\n\nframe rename default nhanes\n\nframe dir\n\n  nhanes  10351 x 58; nhanes2.dta\n\n\n\nCréation d’une frame\nOn souhaite, par exemple, créer des bases d’indicateurs en collapsant des informations issues de la base/frame nhanes, sur la tension artérielle (bpsystol) et sur l’IMC (bmi), tout en gardant les informations sur le sexe (sex). On va générer deux frames avec frame put.\nOn indique simplement la sélection de variables et avec l’option into() le nom de la nouvelle frame.\n\nframe put sex bpsystol, into(tension)\nframe put sex bmi,      into(imc)\n\nframe dir\n\n* imc      10351 x 2\n  nhanes   10351 x 58; nhanes2.dta\n* tension  10351 x 2\n\nNote: Frames marked with * contain unsaved data.\n\n\nRemarques\n\npas de préserve/restore et aucune opération de sauvegarde n’ont été nécessaire.\nframe dir indique les frames qui ne sont pas enregistrées en dur (.dta).\nOn peut utiliser les arguments if in pour sélectionner des observations.\n\n\n\nOpérations en parallèle\nOn a maintenant 3 frames dans la session: la frame active nhanes (chargée dans l’interface), et en arrière plan tension et imc.\nOn peut continuer à travailler sur la base nhanes, mais aussi simultanément sur les deux nouvelles frames.\nUne seule ligne de commande:\nframe nom_frame: command\nPlusieurs lignes de commandes:\nframe nom_frame {\ncommand1\ncommand2\n.\n.\n.\n} \n\n* frame active (nhanes2)\ntab agegrp\n\nframe tension: rename bpsystol tension\nframe tension: mean   tension, over(sex)\n\nframe imc: rename bmi imc\nframe imc: mean   imc, over(sex)\n\n\n  Age group |      Freq.     Percent        Cum.\n------------+-----------------------------------\n      20–29 |      2,320       22.41       22.41\n      30–39 |      1,622       15.67       38.08\n      40–49 |      1,272       12.29       50.37\n      50–59 |      1,291       12.47       62.84\n      60–69 |      2,860       27.63       90.47\n        70+ |        986        9.53      100.00\n------------+-----------------------------------\n      Total |     10,351      100.00\n\nMean estimation                          Number of obs = 10,351\n\n---------------------------------------------------------------\n              |       Mean   Std. err.     [95% conf. interval]\n--------------+------------------------------------------------\nc.tension@sex |\n        Male  |    132.888      0.299       132.301     133.475\n      Female  |    129.068      0.341       128.400     129.736\n---------------------------------------------------------------\n\nMean estimation                         Number of obs = 10,351\n\n--------------------------------------------------------------\n             |       Mean   Std. err.     [95% conf. interval]\n-------------+------------------------------------------------\n   c.imc@sex |\n       Male  |     25.510      0.057        25.397      25.622\n     Female  |     25.563      0.076        25.414      25.711\n--------------------------------------------------------------\n\n\nSur le même principe, on va collapser les frames et tension et imcs (moyennes de tension et imc par sexe)\n\nframe tension {\ncollapse tension, by(sex)\nlist\n}\n\nframe imc {\ncollapse imc, by(sex)\nlist\n}\n\n\n     +-------------------+\n     |    sex    tension |\n     |-------------------|\n  1. |   Male   132.8877 |\n  2. | Female   129.0679 |\n     +-------------------+\n\n     +-------------------+\n     |    sex        imc |\n     |-------------------|\n  1. |   Male   25.50999 |\n  2. | Female   25.56256 |\n     +-------------------+\n\n\n\nframe dir\n\n* imc      2 x 2\n  nhanes   10351 x 58; nhanes2.dta\n* tension  2 x 2\n\nNote: Frames marked with * contain unsaved data.\n\n\nRemarque: la frame/base nhanes et toujours celle qui est chargée dans l’interface. On peut changer à tout instant de frame chargée dans l’interface avec frame change nom_frame\n\n\nLiaison entre frames\nL’autre nouveauté est le système de liaison: - Il permet d’apparier des informations entre bases - Il permet de faire des opérations entre frames sans avoir à apparier des bases\nPour lier deux frames on utilise la commande frlink:\n- Nécessite une clé d’appariement, comme pour merge une ou plusieurs variables - On doit indiquer le type de liaison: 1:1 ou m:1 - Stata génère une variable de liaison, on peut lui donner un nom - Petit regret: on ne peut lier que deux frames à la fois. Dans notre exemple, on aurait par exemple aimer lier la frame nhanes aux frames tension et imc en une ligne. On devra le faire deux fois, avec deux variables de liaison identiques.\nfrlink varlist, frame(nom_frame) gen(link_name)\nIci la clé d’appariement est la variable sex, la liaison est de type m:1\n\nfrlink m:1 sex, frame(tension) gen(l1)\nfrlink m:1 sex, frame(imc)     gen(l2)\n\n  (all observations in frame nhanes matched)\n  (all observations in frame nhanes matched)\n\n\non souhaite apparier les variables tension et inc à la base/frame nhanes: frget. La variable de liaison joue le rôle de la clé d’identification.\nAvantage:\n\non merge des variables et non des bases. On sélectionne donc les variables que l’on juge utile\non peut renommer les variables avec frget, ici mtension pour tension et mimc pour imc. Attention aux habitudes, ici pour renommer c’est nouveau_nom=ancien_nom.\n\n\nfrget mtension=tension, from(l1)\nfrget mimc=imc,     from(l2)\n\n  (1 variable copied from linked frame)\n  (1 variable copied from linked frame)\n\n\nLes variables mtension et minc sont maintenant dans la base/frame nhanes\n\nmean mtension mimc, over(sex)\n\n\nMean estimation                           Number of obs = 10,351\n\n----------------------------------------------------------------\n               |       Mean   Std. err.     [95% conf. interval]\n---------------+------------------------------------------------\nc.mtension@sex |\n         Male  |    132.888      0.000             .           .\n       Female  |    129.068      0.000             .           .\n               |\n    c.mimc@sex |\n         Male  |     25.510      0.000             .           .\n       Female  |     25.563      0.000             .           .\n----------------------------------------------------------------\n\n\nImaginons que nous ne souhaitions pas importer les variables mtension minc qui joueraient ici le rôle de variables contextuelles, mais mesurer simplement un écart entre les observations individuelles et les moyennes, en tenant compte du sexe de la personnes. On peut générer des variables sans appariement préalable avec une nouvelle fonction, ajoutée à gen et replace, frval.\nsyntaxe : frval(variable_liaison, nom_variable)\nEn amont je supprime les variables mtension et mimc de la frame nhanes (inutiles) et renomme les variables tension et imc dans leur frame respective (pour facilité la lecture de frval)\n\ndrop mtension mimc\n\nframe tension: rename tension mean_tension\nframe imc:     rename imc     mean_imc\n\nCréation des variables diff_tens et diff_imc\n\ngen diff_tens = bpsystol - frval(l1, mean_tension)\ngen diff_imc =  bmi      - frval(l2, mean_imc)\n\nlist  diff_tens diff_imc in 1/10\n\n\n     +-----------------------+\n     | diff_tens    diff_imc |\n     |-----------------------|\n  1. |  -26.8877   -5.014309 |\n  2. | -21.06789    -4.54022 |\n  3. | -31.06789   -.5886974 |\n  4. |  50.93211    10.16616 |\n  5. | -9.067886    2.361246 |\n     |-----------------------|\n  6. |  50.93211    4.939587 |\n  7. | -29.06789   -2.530706 |\n  8. |  24.93211   -2.527401 |\n  9. | -9.067886    .0732231 |\n 10. |  -28.8877   -4.530003 |\n     +-----------------------+\n\n\nDans une même création de variable, on peut utiliser frval pour plusieurs liaisons, et dans des expression conditionnelles. Si on souhaite ici créer une indicatrice qui repère les personnes dont la tension et l’imc sont supérieurs à la moyenne. Les variables diff_tens et diff_imc étant inutiles.\n\ndrop diff_tens diff_imc\n\ngen sup_tens_imc = bpsystol&gt; frval(l1, mean_tens) & bmi &gt; frval(l2, mean_imc)\n\nlist sup_tens_imc in 1/10\n\n\n     +----------+\n     | sup_te~c |\n     |----------|\n  1. |        0 |\n  2. |        0 |\n  3. |        0 |\n  4. |        1 |\n  5. |        0 |\n     |----------|\n  6. |        1 |\n  7. |        0 |\n  8. |        0 |\n  9. |        0 |\n 10. |        0 |\n     +----------+\n\n\n\n\nAutres opérations\nVérifier la frame chargée dans l’interface\nframe pwf ou plus rapidement pwf\n\npwf\n\n  (current frame is nhanes)\n\n\nChanger de frame chargée dans l’interface\nDepuis le début, seule la frame nhanes était chargée dans l’interface. On peut à tout moment changer la frame chargée avec frame change nom_frame.\n\nframe change tension\ndes\n\nframe nhanes:  des, s\n\nframe change nhanes\n\n\nContains data\n Observations:             2                  \n    Variables:             2                  \n-------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n-------------------------------------------------------------------------------\nsex             byte    %9.0g      sex        Sex\nmean_tension    float   %9.0g                 (mean) tension\n-------------------------------------------------------------------------------\nSorted by: sex\n     Note: Dataset has changed since last saved.\n\nContains data from https://www.stata-press.com/data/r17/nhanes2.dta\n Observations:        10,351                  \n    Variables:            61                  20 Dec 2020 10:07\nSorted by: \n     Note: Dataset has changed since last saved.\n\n\nSupprimer des frames\n\nOn peut supprimer à tout moment une frame qui n’est pas chargée dans l’interface avec frame drop nom_frame. Si on applique cette commande à la frame chargée, Stata renvoie un message d’erreur.\nOn peut supprimer toutes les frames avec frame reset. Dans ce cas plus aucune base ne sera chargée dans l’interface.\n\n\nframe drop tension\nframe dir\n\nframe reset\nframe dir\n\n* imc     2 x 2\n* nhanes  10351 x 61; nhanes2.dta\n\nNote: Frames marked with * contain unsaved data.\n  default  0 x 0\n\n\nIl reste la frame “vide” default générée automatiquement par Stata.\nCréation d’une frame\nOn peut créer une frame vide à tout moment avec frame create nom_frame. On peut également ajouter une liste de nom de variables: frame create nom_frame varlist\n\nframe create new\nframe dir\n\n  default  0 x 0\n  new      0 x 0\n\n\n\nframe create new2 x\nframe dir\n\n  default  0 x 0\n  new      0 x 0\n* new2     0 x 1\n\nNote: Frames marked with * contain unsaved data.\n\n\nLa frame new2 à une colonne, mais aucune observation\n\nframe new2 {\nset obs 1000\nreplace x = rnormal()\nlabel variable x \"x = random normal (0,1)\"\ndes\n}\n\nframe dir\n\nNumber of observations (_N) was 0, now 1,000.\n(1,000 real changes made)\n\nContains data\n Observations:         1,000                  \n    Variables:             1                  \n-------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n-------------------------------------------------------------------------------\nx               float   %9.0g                 x = random normal (0,1)\n-------------------------------------------------------------------------------\nSorted by: \n     Note: Dataset has changed since last saved.\n  default  0 x 0\n  new      0 x 0\n* new2     1000 x 1\n\nNote: Frames marked with * contain unsaved data.\n\n\nEnsemble du programme\n\nframe dir \n\nwebuse nhanes2\n\nframe dir \ndes, s\n\nframe rename default nhanes\nframe dir \n\nframe put sex bpsystol, into(tension)\nframe put sex bmi,      into(imc)\n\nframe dir\n\n* frame active (nhanes2)\ntab agegrp\n\n\n* frame tension\nframe tension: rename bpsystol tension\nframe tension: mean tension, over(sex)\n\n* frame imc\nframe imc: rename bmi imc\nframe imc: mean imc, over(sex)\n\n\nframe tension {\ncollapse tension, by(sex)\nlist\n}\n\nframe imc {\ncollapse imc, by(sex)\nlist\n}\n\nframe dir\n\nfrlink m:1 sex, frame(tension) gen(l1)\nfrlink m:1 sex, frame(imc) gen(l2)\n\n\nfrget mtension=tension, from(l1)\nfrget mimc=imc,     from(l2)\n\n\n\ndrop mtension mimc\nframe tension: rename tension mean_tension\nframe imc:     rename imc     mean_imc\n\n\ngen diff_tens = bpsystol - frval(l1, mean_tension)\ngen diff_imc =  bmi      - frval(l2, mean_imc)\n\nmean diff_tens diff_imc, over(sex)\n\ndrop diff_tens diff_imc\ngen sup_tens_imc = bpsystol&gt; frval(l1, mean_tension) & bmi &gt; frval(l2, mean_imc)\n\n\nframe change tension\ndes\nframe nhanes:  des, s\nframe change nhanes\n\nframe drop tension\nframe dir\n\nframe reset\nframe dir\n\nframe create new\nframe dir\n\nframe create new2 x\nframe dir\n\nframe new2 {\nset obs 1000\nreplace x = rnormal()\nlabel variable x \"x = random normal (0,1)\"\ndes\n}\n\nframe dir\n\n  default  0 x 0\n  new      0 x 0\n* new2     1000 x 1\n\nNote: Frames marked with * contain unsaved data.\n  default  10351 x 58; nhanes2.dta\n  new      0 x 0\n* new2     1000 x 1\n\nNote: Frames marked with * contain unsaved data.\n\nContains data from https://www.stata-press.com/data/r17/nhanes2.dta\n Observations:        10,351                  \n    Variables:            58                  20 Dec 2020 10:07\nSorted by: \n  new     0 x 0\n* new2    1000 x 1\n  nhanes  10351 x 58; nhanes2.dta\n\nNote: Frames marked with * contain unsaved data.\n* imc      10351 x 2\n  new      0 x 0\n* new2     1000 x 1\n  nhanes   10351 x 58; nhanes2.dta\n* tension  10351 x 2\n\nNote: Frames marked with * contain unsaved data.\n\n  Age group |      Freq.     Percent        Cum.\n------------+-----------------------------------\n      20–29 |      2,320       22.41       22.41\n      30–39 |      1,622       15.67       38.08\n      40–49 |      1,272       12.29       50.37\n      50–59 |      1,291       12.47       62.84\n      60–69 |      2,860       27.63       90.47\n        70+ |        986        9.53      100.00\n------------+-----------------------------------\n      Total |     10,351      100.00\n\nMean estimation                          Number of obs = 10,351\n\n---------------------------------------------------------------\n              |       Mean   Std. err.     [95% conf. interval]\n--------------+------------------------------------------------\nc.tension@sex |\n        Male  |    132.888      0.299       132.301     133.475\n      Female  |    129.068      0.341       128.400     129.736\n---------------------------------------------------------------\n\nMean estimation                         Number of obs = 10,351\n\n--------------------------------------------------------------\n             |       Mean   Std. err.     [95% conf. interval]\n-------------+------------------------------------------------\n   c.imc@sex |\n       Male  |     25.510      0.057        25.397      25.622\n     Female  |     25.563      0.076        25.414      25.711\n--------------------------------------------------------------\n\n     +-------------------+\n     |    sex    tension |\n     |-------------------|\n  1. |   Male   132.8877 |\n  2. | Female   129.0679 |\n     +-------------------+\n\n     +-------------------+\n     |    sex        imc |\n     |-------------------|\n  1. |   Male   25.50999 |\n  2. | Female   25.56256 |\n     +-------------------+\n* imc      2 x 2\n  new      0 x 0\n* new2     1000 x 1\n  nhanes   10351 x 58; nhanes2.dta\n* tension  2 x 2\n\nNote: Frames marked with * contain unsaved data.\n  (all observations in frame nhanes matched)\n  (all observations in frame nhanes matched)\n  (1 variable copied from linked frame)\n  (1 variable copied from linked frame)\n\nMean estimation                            Number of obs = 10,351\n\n-----------------------------------------------------------------\n                |       Mean   Std. err.     [95% conf. interval]\n----------------+------------------------------------------------\nc.diff_tens@sex |\n          Male  |     -0.000      0.299        -0.587       0.587\n        Female  |     -0.000      0.341        -0.668       0.668\n                |\n c.diff_imc@sex |\n          Male  |      0.000      0.057        -0.113       0.113\n        Female  |      0.000      0.076        -0.149       0.149\n-----------------------------------------------------------------\n\nContains data\n Observations:             2                  \n    Variables:             2                  \n-------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n-------------------------------------------------------------------------------\nsex             byte    %9.0g      sex        Sex\nmean_tension    float   %9.0g                 (mean) tension\n-------------------------------------------------------------------------------\nSorted by: sex\n     Note: Dataset has changed since last saved.\n\nContains data from https://www.stata-press.com/data/r17/nhanes2.dta\n Observations:        10,351                  \n    Variables:            61                  20 Dec 2020 10:07\nSorted by: \n     Note: Dataset has changed since last saved.\n* imc     2 x 2\n  new     0 x 0\n* new2    1000 x 1\n* nhanes  10351 x 61; nhanes2.dta\n\nNote: Frames marked with * contain unsaved data.\n  default  0 x 0\n  default  0 x 0\n  new      0 x 0\n  default  0 x 0\n  new      0 x 0\n* new2     0 x 1\n\nNote: Frames marked with * contain unsaved data.\nNumber of observations (_N) was 0, now 1,000.\n(1,000 real changes made)\n\nContains data\n Observations:         1,000                  \n    Variables:             1                  \n-------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n-------------------------------------------------------------------------------\nx               float   %9.0g                 x = random normal (0,1)\n-------------------------------------------------------------------------------\nSorted by: \n     Note: Dataset has changed since last saved.\n  default  0 x 0\n  new      0 x 0\n* new2     1000 x 1\n\nNote: Frames marked with * contain unsaved data."
  },
  {
    "objectID": "articles/index/posts/palette_style/palette_style.html",
    "href": "articles/index/posts/palette_style/palette_style.html",
    "title": "Nouvelle palette de couleurs et nouveau thème usine avec Stata 18",
    "section": "",
    "text": "Nouvelle palette stcolor\n\n\n\n\n\n\ngrstyle et la nouvelle option colorvar\n\n\n\nLa palette chargée avec grstyle set color (commande de Ben Jann) n’est pas appliqué à la variable de la nouvelle option colorvar. C’est un peu facheux. On peut résoudre le problème en récupérant la macro r(p) après avoir chargé la palette avec colorpalette et en l’appliquant dans la nouvelle option colorlist.\n\n\n\n\n\nNouvelle palette stcolor\n\n\n\n\n\nAncienne palette s2\n\n\n\n\nNouveau thème par défaut\n\n\n\n\n\n\nNouvelle position de la légende\n\n\n\nLe nouveau thème modifie le positionnement de la legende par défaut (à 3 heures), ce qui n’est pas forcément une bonne idée lorsque les labels sont assez long (écrasement important de la largeur du graphique). Pour retrouver la position à 6 heures et sur une ligne (défaut jusqu’à la v17: legend(pos(6) row(1)))\n\n\nAvec le programme donné en exemple de l’aide de line [help line]:\n\n\n\nNouveau thème\n\n\n\n\n\nAncien thème"
  },
  {
    "objectID": "versions.html",
    "href": "versions.html",
    "title": "Versions Stata",
    "section": "",
    "text": "Version 18 (mai 2023)\nJe viens juste d’avoir la mise à jour de la version 18. On peut trouver la liste des mise à jour ici\nQuelques remarques sur ce que j’ai rapidement regardé/testé:\n\nPrésence d’une autosave pour l’éditeur de programme…enfin (lien article)\nGraphiques:\n\nNouvelle palette de couleur et nouveau thème par défaut… enfin (lien article)\nNouvelle(s) option(s) qui modifient la syntaxe d’empilement d’objets graphiques (colorvar). Déjà quelques réserves si l’empilement est relatif à une troisième variable de type discrète (on empilait avec des if). La syntaxe des options semblent un peu lourde pour pas grand chose (article site officiel). Cela me semble plus intéressant si la troisième variable est de type continue, même si la paramétrisation de me semble pas top. A remarqué qu’avec colorvar() on ne peut plus directement chargé une palette de couleur avec grstyle set color de B.Jann. On doit passer par colorpalette et inserer dans une option la macro r(p).\n\n\nLes frames:\n\nnouvelle extension avec .dtas qui enregistrent directement une suite de frame liées (pas testé mais cela me semble très intéressant).\npossibilité de supprimer plusieurs frame actives avec frame drop (non testé).\n\n\n\n\nVersions installées (2022)\nVersions à l’Ined\nSauf exception les versions windows et linux sont en version 17 SE. La version 16 avait été partiellement déployée sous windows en 2020, alors que la version précédente linux était la 15 (2017).\nA noter pour la version linux, utilisée principalement pour le personnel non titutaire, qu’il est possible depuis la version 16 d’importer directement des bases en format Sas avec la commande import sas. Pour les exportations de fichiers .dta en .sas7bdat, il est toujours recommandé d’utiliser la commande savasas (findit saswrapper)\nAjouts et améliorations avec la version 17: https://www.stata.com/new-in-stata/\n\nAmélioration du temps d’exécution: sans comparation avec les versions antérieures, on note une nette amélioration du temps d’exécution en particulier pour la commande collapse, la commande sort et les opérations qui lui sont associées, par exemple avec le prefixe bysort (voir la note de version en lien ci-dessus). Associées aux commande du package gtools le gain de temps apparait encore plus considérable pour des opérations sur des bases de données volumineuses. Les fonctionnalités de ce package seront décrites dans la partie dédiée à la programmation (lien à venir).\nWishlist: Vous pouvez alimenter la whishlist de la version 18 (printemps 2023) …. cela fait de nombreuses années qu’une autosave de l’éditeur de programme est demandé. Cela va bien finir par arriver un jour: https://www.statalist.org/forums/forum/general-stata-discussion/general.\n\n\n\nMise à jour de la version\nAu cours des deux années d’existence d’une version, plusieurs mises à jour visant à fixer des bugs sont disponibles. Si on saute une ou plusieurs maj, la dernière met à jour l’ensemble (cela sera forcément un peu plus long)\n\nConsultation des mises à jours (avec contenu): update query\nInstallation de la mise à jour\n\nLe fichier ouvert avec update query propose d’installer la ou les mises à jour. Toutes les sessions devront être fermée avant l’installation.\nA l’Ined, la mise à jour ne peut se faire que sous son compte administrateur. Ce type de session a été mise en place il y a quelques années par le service informatique. Si vous ne l’avez jamais utilisé ou oublié, il faut entrer son login administrateur et un mot de passe. Normalement:\n\nLogin: adm_nom. Pour moi donc: adm_thevenin\nMot De Passe: le mot de passe du sceau ined (sous condition, j’ai du mettre un mdp différent à mon retour de détachement).\nSi problème: contacter le service informatique à l’adresse support-micro@ined.fr"
  }
]